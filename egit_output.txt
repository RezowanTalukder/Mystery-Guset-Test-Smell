
/org.eclipse.egit.core/src/org/eclipse/egit/core/Activator.java
===============================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/AdapterUtils.java
==================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/attributes/Filtering.java
==========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/CommitUtil.java
================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/EclipseAuthenticator.java
==========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/EclipseGitProgressTransformer.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/EclipseProxySelector.java
==========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/EclipseSshSessionFactory.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitCorePreferenceInitializer.java
==================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitCorePreferences.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitMoveDeleteHook.java
=======================================================================



Line No: 326 ------->
Mystry Guest smell found
 [Lines Optional[(line 309,col 36)] - Optional[(line 350,col 2)] ] 

{
    final RepositoryMapping srcm = RepositoryMapping.getMapping(source);
    if (srcm == null)
        return false;
    IPath newLocation = null;
    if (description.getLocationURI() != null)
        newLocation = URIUtil.toPath(description.getLocationURI());
    else
        newLocation = source.getWorkspace().getRoot().getLocation().append(description.getName());
    IPath sourceLocation = source.getLocation();
    // Prevent a serious error.
    if (sourceLocation.isPrefixOf(newLocation) && sourceLocation.segmentCount() != newLocation.segmentCount() && !"true".equals(System.getProperty("egit.assume_307140_fixed"))) {
        // $NON-NLS-1$//$NON-NLS-2$
        // Graceful handling of bug, i.e. refuse to destroy your code
        tree.failed(new Status(IStatus.ERROR, Activator.getPluginId(), 0, // $NON-NLS-1$
        "Cannot move project. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=307140 (not resolved in 3.7)", null));
        return true;
    }
    File newLocationFile = newLocation.toFile();
    // check if new location is below the same repository
    Path workTree = new Path(srcm.getRepository().getWorkTree().getAbsolutePath());
    int matchingFirstSegments = workTree.matchingFirstSegments(newLocation);
    if (matchingFirstSegments == workTree.segmentCount()) {
        return moveProjectHelperMoveOnlyProject(tree, source, description, updateFlags, monitor, srcm, newLocationFile);
    } else {
        int dstAboveSrcRepo = newLocation.matchingFirstSegments(srcm.getGitDirAbsolutePath());
        int srcAboveSrcRepo = sourceLocation.matchingFirstSegments(srcm.getGitDirAbsolutePath());
        if (dstAboveSrcRepo > 0 && srcAboveSrcRepo > 0) {
            return moveProjectHelperMoveRepo(tree, source, description, updateFlags, monitor, srcm, newLocation, sourceLocation);
        } else {
            return FINISH_FOR_ME;
        }
    }
}

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitProjectSetCapability.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitProvider.java
=================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/GitTag.java
============================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/AdapterFactory.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/CompareCoreUtils.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/CoreText.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/EGitSshdSessionFactory.java
=====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/FileChecker.java
==========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/gerrit/GerritUtil.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/GitRepositoryProviderType.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/GitURI.java
=====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/GitResourceDeltaVisitor.java
================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffCache.java
=======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffCacheEntry.java
============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffChangedListener.java
=================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffData.java
======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffUpdateJob.java
===========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/SkipNotInterestingDeltaVisitor.java
=======================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/IRepositoryCommit.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/IRepositoryObject.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/job/JobUtil.java
==========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/job/RuleUtil.java
===========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/ProjectReferenceImporter.java
=======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/rebase/RebaseInteractivePlan.java
===========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/ReportingTypedConfigGetter.java
=========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/ResourceRefreshHandler.java
=====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/SafeRunnable.java
===========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/SshPreferencesMirror.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/AbstractGitResourceVariant.java
=================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/CommitBlobStorage.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/CommitFileRevision.java
=========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/GitFileHistory.java
=====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/GitFileHistoryProvider.java
=============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/GitFileRevision.java
======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/IndexBlobStorage.java
=======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/IndexFileRevision.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/KidCommit.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/KidCommitList.java
====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/KidWalk.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/OpenWorkspaceVersionEnabled.java
==================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/WorkingTreeFileRevision.java
==============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/storage/WorkspaceFileRevision.java
============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/trace/GitTraceLocation.java
=====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/trace/ITraceLocation.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/trace/JSchLogger.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/ExceptionCollector.java
======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/ProjectUtil.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/RepositoryPathChecker.java
=========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/ResourceUtil.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/internal/Utils.java
====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/IteratorService.java
=====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/JobFamilies.java
=================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/NetUtil.java
=============================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/AddToIndexOperation.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/AssumeUnchangedOperation.java
=================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/BranchOperation.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/CherryPickOperation.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/CloneOperation.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/CommitOperation.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ConfigureFetchAfterCloneTask.java
=====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ConfigureGerritAfterCloneTask.java
======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ConfigurePushAfterCloneTask.java
====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ConnectProviderOperation.java
=================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/CreateLocalBranchOperation.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/CreatePatchOperation.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/DeleteBranchOperation.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/DeletePathsOperation.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/DeleteTagOperation.java
===========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/DiscardChangesOperation.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/DisconnectProviderOperation.java
====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/EditCommitOperation.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/FetchOperation.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/FetchOperationResult.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/GarbageCollectOperation.java
================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/IEGitOperation.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/IgnoreOperation.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ListRemoteOperation.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/MergeOperation.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/PullOperation.java
======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/PushOperation.java
======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/PushOperationResult.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/PushOperationSpecification.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/RebaseOperation.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/RemoveFromIndexOperation.java
=================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/RenameBranchOperation.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/ResetOperation.java
=======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/RevertCommitOperation.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/RewordCommitOperation.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SetChangeIdTask.java
========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SetRepositoryConfigPropertyTask.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SquashCommitsOperation.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/StashApplyOperation.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/StashCreateOperation.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/StashDropOperation.java
===========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SubmoduleAddOperation.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SubmoduleSyncOperation.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/SubmoduleUpdateOperation.java
=================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/TagOperation.java
=====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/op/UntrackOperation.java
=========================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/project/GitProjectData.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/project/RepositoryFinder.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/project/RepositoryMapping.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/project/RepositoryMappingChangeListener.java
=============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/ProjectReference.java
======================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryCache.java
=====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryUtil.java
====================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/RevUtils.java
==============================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/securestorage/EGitSecureStore.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/securestorage/UserPasswordCredentials.java
===========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/storage/GitBlobStorage.java
============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/dto/GitSynchronizeData.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/dto/GitSynchronizeDataSet.java
===========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitBaseResourceVariantTree.java
============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitCommitsModelCache.java
======================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitCommitsModelDirectionException.java
===================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitLazyResourceVariantTreeSubscriber.java
======================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitLocalResourceVariant.java
=========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitRemoteFile.java
===============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitRemoteFolder.java
=================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitRemoteResource.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitRemoteResourceVariantTree.java
==============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitResourceVariantComparator.java
==============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitResourceVariantTree.java
========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeSubscriber.java
==================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSourceResourceVariantTree.java
==============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java
===========================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberResourceMappingContext.java
=====================================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSyncCache.java
==============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSyncInfo.java
=============================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSyncObjectCache.java
====================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/IgnoreInGitSynchronizations.java
=============================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/StagedChangeCache.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/ThreeWayDiffEntry.java
===================================================================================

/org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/WorkingTreeChangeCache.java
========================================================================================

/org.eclipse.egit.core.junit/src/org/eclipse/egit/core/test/DualRepositoryTestCase.java
=======================================================================================

/org.eclipse.egit.core.junit/src/org/eclipse/egit/core/test/GitTestCase.java
============================================================================

/org.eclipse.egit.core.junit/src/org/eclipse/egit/core/test/TestProject.java
============================================================================

/org.eclipse.egit.core.junit/src/org/eclipse/egit/core/test/TestRepository.java
===============================================================================



Line No: 561 ------->
Mystry Guest smell found
 [Lines Optional[(line 558,col 51)] - Optional[(line 560,col 2)] ] 

{
    return new URIish("file:///" + repository.getDirectory().toString());
}

/org.eclipse.egit.core.junit/src/org/eclipse/egit/core/test/TestUtils.java
==========================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/GitMoveDeleteHookTest.java
================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffCacheEntryTest.java
=====================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffCacheTest.java
================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffDataTest.java
===============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/ProjectReferenceImporterTest.java
================================================================================================



Line No: 64 


Line No: 65 ------->
Mystry Guest smell found
 [Lines Optional[(line 61,col 57)] - Optional[(line 67,col 2)] ] 

{
    addRemote(repository, "origin", uri("ssh://user@host.com:42/repo"));
    File foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://user@host.com:42/repo"));
    assertEquals(repository.getDirectory(), foundRepo);
}



Line No: 73 


Line No: 74 


Line No: 75 ------->
Mystry Guest smell found
 [Lines Optional[(line 70,col 64)] - Optional[(line 77,col 2)] ] 

{
    addRemote(repository, "remote_1", uri("ssh://user@host.com:42/repo"));
    addRemote(repository, "remote_2", uri("http://host.com/other/repo"));
    File foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://user@host.com:42/repo"));
    assertEquals(repository.getDirectory(), foundRepo);
}



Line No: 83 


Line No: 84 


Line No: 86 ------->
Mystry Guest smell found
 [Lines Optional[(line 80,col 63)] - Optional[(line 90,col 2)] ] 

{
    addRemote(repository, "origin", uri("ssh://user_1@host.com:42/repo"));
    File foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://user_2@host.com:42/repo"));
    assertEquals(repository.getDirectory(), foundRepo);
    foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://host.com:42/repo"));
    assertEquals(repository.getDirectory(), foundRepo);
}



Line No: 96 


Line No: 97 ------->
Mystry Guest smell found
 [Lines Optional[(line 93,col 78)] - Optional[(line 99,col 2)] ] 

{
    addRemote(repository, "origin", uri("ssh://user_1@host.com:42/repo"));
    File foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://user_2@host.com:42/repo.git"));
    assertEquals(repository.getDirectory(), foundRepo);
}



Line No: 105 


Line No: 106 ------->
Mystry Guest smell found
 [Lines Optional[(line 102,col 63)] - Optional[(line 108,col 2)] ] 

{
    addRemote(repository, "origin", uri("ssh://host.com:42/repo_1"));
    File foundRepo = ProjectReferenceImporter.findConfiguredRepository(uri("ssh://host.com:42/repo_2"));
    assertNotEquals(repository.getDirectory(), foundRepo);
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/SshPreferencesMirrorTest.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/storage/CommitFileRevisionTest.java
==================================================================================================



Line No: 77 ------->
Mystry Guest smell found
 [Lines Optional[(line 73,col 37)] - Optional[(line 88,col 2)] ] 

{
    createFile(base, ".gitattributes", "*.txt filter=test");
    String builtinCommandName = "egit://builtin/test/smudge";
    FilterCommandRegistry.register(builtinCommandName, new TestCommandFactory('a', 'x'));
    StoredConfig config = repo.getConfig();
    config.setString("filter", "test", "smudge", builtinCommandName);
    config.save();
    if (commit) {
        try (Git git = new Git(repo)) {
            git.add().addFilepattern(".").call();
            return git.commit().setMessage("Add .gitattributes").call();
        }
    }
    return null;
}



Line No: 126 ------->
Mystry Guest smell found
 [Lines Optional[(line 91,col 61)] - Optional[(line 132,col 2)] ] 

{
    java.nio.file.Path filePath = createFile(project.getProject(), "attr.txt", "a");
    try (Git git = new Git(repository)) {
        git.add().addFilepattern(".").call();
        git.commit().setMessage("Initial commit").call();
        // Verify that we do have "a" in the repo: modify the file, do a
        // hard reset, verify the contents to be "a" again
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        List<String> content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("a", content.get(0));
        // Now create a smudge filter that will replace all a's by x's, and
        // commit the .gitattributes file.
        RevCommit head = setupFilter(repository, project.getProject(), true);
        // Modify the file again and do a hard reset. We should end up with
        // a file containing "x".
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("x", content.get(0));
        // All right. Now get a CommitFileRevision and check its contents.
        String relativePath = getRevisionPath(filePath);
        CommitFileRevision fileRevision = new CommitFileRevision(repository, head, relativePath);
        ByteBuffer rawContent = null;
        try (InputStream blobStream = fileRevision.getStorage(new NullProgressMonitor()).getContents()) {
            rawContent = IO.readWholeStream(blobStream, 1);
        }
        assertNotNull(rawContent);
        String blobContent = new String(rawContent.array(), 0, rawContent.limit(), StandardCharsets.UTF_8);
        assertEquals("x", blobContent);
    } finally {
        FilterCommandRegistry.unregister("egit://builtin/test/smudge");
    }
}



Line No: 180 ------->
Mystry Guest smell found
 [Lines Optional[(line 135,col 64)] - Optional[(line 185,col 2)] ] 

{
    java.nio.file.Path filePath = createFile(project.getProject(), "attr.txt", "a");
    try (Git git = new Git(repository)) {
        git.add().addFilepattern(".").call();
        RevCommit head = git.commit().setMessage("Initial commit").call();
        // Verify that we do have "a" in the repo: modify the file, do a
        // hard reset, verify the contents to be "a" again
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        List<String> content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("a", content.get(0));
        // Now create a smudge filter that will replace all a's by x's.
        setupFilter(repository, project.getProject(), false);
        // Modify the file again and do a hard reset. Interestingly we end
        // up with a file containing 'x': the checkout does apply the
        // not-yet-committed .gitattributes. I do not know whether that is
        // correct.
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("x", content.get(0));
        // All right. Now get a CommitFileRevision and check its contents.
        String relativePath = getRevisionPath(filePath);
        CommitFileRevision fileRevision = new CommitFileRevision(repository, head, relativePath);
        ByteBuffer rawContent = null;
        try (InputStream blobStream = fileRevision.getStorage(new NullProgressMonitor()).getContents()) {
            rawContent = IO.readWholeStream(blobStream, 1);
        }
        assertNotNull(rawContent);
        String blobContent = new String(rawContent.array(), 0, rawContent.limit(), StandardCharsets.UTF_8);
        // Prize question: what do we expect here? We explicitly say we
        // want to look at an older version. (OK, in this test it happens
        // to be HEAD, but that's immaterial.) I believe the correct
        // behavior is to apply only the attributes as they existed in that
        // commit, i.e., to disregard the .gitattributes in the file system.
        // Note, however, that this means that we get a different behavior
        // than if we checked out the commit. Also note that global/info
        // attributes get applied in any case -- that behavior is
        // unavoidable and appears to be wanted by the .gitattributes spec.
        assertEquals("a", blobContent);
    } finally {
        FilterCommandRegistry.unregister("egit://builtin/test/smudge");
    }
}



Line No: 217 


Line No: 220 


Line No: 241 


Line No: 242 ------->
Mystry Guest smell found
 [Lines Optional[(line 198,col 21)] - Optional[(line 251,col 2)] ] 

{
    java.nio.file.Path filePath = createFile(project.getProject(), "attr.txt", "a");
    try (Git git = new Git(repository)) {
        git.add().addFilepattern(".").call();
        RevCommit head = git.commit().setMessage("Initial commit").call();
        // Verify that we do have "a" in the repo: modify the file, do a
        // hard reset, verify the contents to be "a" again
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        List<String> content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("a", content.get(0));
        // Now create a smudge filter that will replace all a's by x's.
        setupFilter(repository, project.getProject(), false);
        // Set up the global attributes. For simplicity, we create the file
        // inside the work tree.
        java.nio.file.Path globalAttributes = createFile(project.getProject(), "globalattrs", "*.txt filter=test2");
        FilterCommandRegistry.register("egit://builtin/test/smudge2", new TestCommandFactory('a', 'y'));
        StoredConfig config = repository.getConfig();
        config.setString("core", null, "attributesFile", globalAttributes.toString());
        config.setString("filter", "test2", "smudge", "egit://builtin/test/smudge2");
        config.save();
        // Modify the file again and do a hard reset. File contains 'x'.
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("x", content.get(0));
        // All right. Now get a CommitFileRevision and check its contents.
        String relativePath = getRevisionPath(filePath);
        CommitFileRevision fileRevision = new CommitFileRevision(repository, head, relativePath);
        ByteBuffer rawContent = null;
        try (InputStream blobStream = fileRevision.getStorage(new NullProgressMonitor()).getContents()) {
            rawContent = IO.readWholeStream(blobStream, 1);
        }
        assertNotNull(rawContent);
        String blobContent = new String(rawContent.array(), 0, rawContent.limit(), StandardCharsets.UTF_8);
        // This should have ignored the not-yet-committed .gitignore and
        // applied the global smudge2 command.
        assertEquals("y", blobContent);
    } finally {
        FilterCommandRegistry.unregister("egit://builtin/test/smudge");
        FilterCommandRegistry.unregister("egit://builtin/test/smudge2");
    }
}



Line No: 274 


Line No: 277 


Line No: 296 


Line No: 297 ------->
Mystry Guest smell found
 [Lines Optional[(line 255,col 21)] - Optional[(line 307,col 2)] ] 

{
    java.nio.file.Path filePath = createFile(project.getProject(), "attr.txt", "a");
    try (Git git = new Git(repository)) {
        git.add().addFilepattern(".").call();
        git.commit().setMessage("Initial commit").call();
        // Verify that we do have "a" in the repo: modify the file, do a
        // hard reset, verify the contents to be "a" again
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        List<String> content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("a", content.get(0));
        // Now create a smudge filter that will replace all a's by x's.
        RevCommit head = setupFilter(repository, project.getProject(), true);
        // Set up the global attributes. For simplicity, we create the file
        // inside the work tree.
        java.nio.file.Path globalAttributes = createFile(project.getProject(), "globalattrs", "*.txt filter=test2");
        FilterCommandRegistry.register("egit://builtin/test/smudge2", new TestCommandFactory('a', 'y'));
        StoredConfig config = repository.getConfig();
        config.setString("core", null, "attributesFile", globalAttributes.toString());
        config.setString("filter", "test2", "smudge", "egit://builtin/test/smudge2");
        config.save();
        // Modify the file again and do a hard reset. File contains 'x'.
        createFile(project.getProject(), "attr.txt", "aa");
        git.reset().setMode(ResetType.HARD).call();
        content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
        assertEquals(1, content.size());
        assertEquals("x", content.get(0));
        // All right. Now get a CommitFileRevision and check its contents.
        String relativePath = getRevisionPath(filePath);
        CommitFileRevision fileRevision = new CommitFileRevision(repository, head, relativePath);
        ByteBuffer rawContent = null;
        try (InputStream blobStream = fileRevision.getStorage(new NullProgressMonitor()).getContents()) {
            rawContent = IO.readWholeStream(blobStream, 1);
        }
        assertNotNull(rawContent);
        String blobContent = new String(rawContent.array(), 0, rawContent.limit(), StandardCharsets.UTF_8);
        assertEquals("x", blobContent);
    } finally {
        FilterCommandRegistry.unregister("egit://builtin/test/smudge");
        FilterCommandRegistry.unregister("egit://builtin/test/smudge2");
    }
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/storage/IndexFileRevisionTest.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/util/ProjectUtilTest.java
========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/util/RepositoryPathCheckerTest.java
==================================================================================================



Line No: 50 ------->
Mystry Guest smell found
 [Lines Optional[(line 47,col 24)] - Optional[(line 50,col 2)] ] 

{
    assertFalse(checker.check("ssh://a.test:/a/b"));
    assertFalse(checker.check("joe@a.test:/a/b"));
}



Line No: 56 ------->
Mystry Guest smell found
 [Lines Optional[(line 53,col 25)] - Optional[(line 55,col 2)] ] 

{
    assertFalse(checker.check("https://a.test/a/b"));
}



Line No: 61 ------->
Mystry Guest smell found
 [Lines Optional[(line 58,col 25)] - Optional[(line 60,col 2)] ] 

{
    assertFalse(checker.check("file://a.test/a/b"));
}



Line No: 66 ------->
Mystry Guest smell found
 [Lines Optional[(line 63,col 27)] - Optional[(line 65,col 2)] ] 

{
    assertFalse(checker.check("foobar://a.test/a/b"));
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/internal/util/ResourceUtilTest.java
=========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/mergestrategy/OursMergeStrategyExtensionFactory.java
==========================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/mergestrategy/TheirsMergeStrategyExtensionFactory.java
============================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/op/ConfigureGerritAfterCloneMatcherTest.java
==================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/project/RepositoryMappingTest.java
========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/securestorage/EGitSecureStoreTest.java
============================================================================================



Line No: 60 ------->
Mystry Guest smell found
 [Lines Optional[(line 57,col 56)] - Optional[(line 68,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    ISecurePreferences node = secureStoreForTest.node(EGitSecureStore.calcNodePath(uri).toString());
    assertEquals("agitter", node.get("user", null));
    assertTrue(node.isEncrypted("password"));
    assertEquals("letmein", node.get("password", null));
}



Line No: 74 ------->
Mystry Guest smell found
 [Lines Optional[(line 71,col 56)] - Optional[(line 80,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    UserPasswordCredentials storedCredentials = store.getCredentials(uri);
    assertEquals("agitter", storedCredentials.getUser());
    assertEquals("letmein", storedCredentials.getPassword());
}



Line No: 86 ------->
Mystry Guest smell found
 [Lines Optional[(line 83,col 66)] - Optional[(line 88,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials storedCredentials = store.getCredentials(uri);
    assertNull(storedCredentials);
}



Line No: 95 ------->
Mystry Guest smell found
 [Lines Optional[(line 92,col 21)] - Optional[(line 104,col 2)] ] 

{
    URIish uri = new URIish("http://user:pass@testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    ISecurePreferences node = secureStoreForTest.node(EGitSecureStore.calcNodePath(uri).toString());
    assertEquals("agitter", node.get("user", null));
    assertTrue(node.isEncrypted("password"));
    assertEquals("letmein", node.get("password", null));
}



Line No: 111 


Line No: 112 ------->
Mystry Guest smell found
 [Lines Optional[(line 108,col 21)] - Optional[(line 116,col 2)] ] 

{
    store.putCredentials(new URIish("http://testRepo.example.com/testrepo"), new UserPasswordCredentials("agitter", "letmein"));
    UserPasswordCredentials credentials = store.getCredentials(new URIish("http://agitter:letmein@testRepo.example.com/testrepo"));
    assertEquals("agitter", credentials.getUser());
    assertEquals("letmein", credentials.getPassword());
}



Line No: 123 


Line No: 124 ------->
Mystry Guest smell found
 [Lines Optional[(line 120,col 21)] - Optional[(line 126,col 2)] ] 

{
    store.putCredentials(new URIish("http://testRepo.example.com/testrepo"), new UserPasswordCredentials("agitter", "letmein"));
    assertNull(store.getCredentials(new URIish("http://otheruser:otherpass@testRepo.example.com/testrepo")));
}



Line No: 132 ------->
Mystry Guest smell found
 [Lines Optional[(line 129,col 54)] - Optional[(line 136,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    store.clearCredentials(uri);
    assertEquals(null, store.getCredentials(uri));
}



Line No: 142 


Line No: 145 ------->
Mystry Guest smell found
 [Lines Optional[(line 139,col 59)] - Optional[(line 147,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    URIish uri2 = new URIish("http://testRepo.example.com:80/testrepo");
    assertEquals(credentials.getUser(), store.getCredentials(uri2).getUser());
    assertEquals(credentials.getPassword(), store.getCredentials(uri2).getPassword());
}



Line No: 153 


Line No: 156 ------->
Mystry Guest smell found
 [Lines Optional[(line 150,col 60)] - Optional[(line 158,col 2)] ] 

{
    URIish uri = new URIish("https://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    URIish uri2 = new URIish("https://testRepo.example.com:443/testrepo");
    assertEquals(credentials.getUser(), store.getCredentials(uri2).getUser());
    assertEquals(credentials.getPassword(), store.getCredentials(uri2).getPassword());
}



Line No: 164 


Line No: 167 ------->
Mystry Guest smell found
 [Lines Optional[(line 161,col 59)] - Optional[(line 169,col 2)] ] 

{
    URIish uri = new URIish("sftp://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    URIish uri2 = new URIish("sftp://testRepo.example.com:22/testrepo");
    assertEquals(credentials.getUser(), store.getCredentials(uri2).getUser());
    assertEquals(credentials.getPassword(), store.getCredentials(uri2).getPassword());
}



Line No: 175 


Line No: 178 ------->
Mystry Guest smell found
 [Lines Optional[(line 172,col 58)] - Optional[(line 180,col 2)] ] 

{
    URIish uri = new URIish("ftp://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    URIish uri2 = new URIish("ftp://testRepo.example.com:21/testrepo");
    assertEquals(credentials.getUser(), store.getCredentials(uri2).getUser());
    assertEquals(credentials.getPassword(), store.getCredentials(uri2).getPassword());
}



Line No: 186 


Line No: 189 ------->
Mystry Guest smell found
 [Lines Optional[(line 183,col 58)] - Optional[(line 191,col 2)] ] 

{
    URIish uri = new URIish("ssh://agitter@testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    URIish uri2 = new URIish("ssh://testRepo.example.com:22/testrepo");
    assertEquals(credentials.getUser(), store.getCredentials(uri2).getUser());
    assertEquals(credentials.getPassword(), store.getCredentials(uri2).getPassword());
}



Line No: 197 ------->
Mystry Guest smell found
 [Lines Optional[(line 194,col 59)] - Optional[(line 203,col 2)] ] 

{
    URIish uri = new URIish("http://testRepo.example.com/testrepo");
    UserPasswordCredentials credentials = new UserPasswordCredentials("agitter", "letmein");
    store.putCredentials(uri, credentials);
    store.clearCredentials(uri);
    assertEquals(null, store.getCredentials(uri));
    store.clearCredentials(uri);
    assertEquals(null, store.getCredentials(uri));
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/storage/GitBlobStorageTest.java
=====================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/AbstractCacheTest.java
========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/ChangeTest.java
=================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/dto/GitSynchronizeDataTest.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitCommitsModelCacheTest.java
===============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantComparatorTest.java
=======================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeSubscriberTest.java
===========================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeTest.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContextTest.java
====================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitSubscriberResourceMappingContextTest.java
==============================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitTestResourceVariantTree.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/StagedChangeCacheTest.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/ThreeWayDiffEntryTest.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/WorkingTreeChangeCacheTest.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/CommitUtilTest.java
==============================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/EclipseGitProgressTransformerTest.java
=================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/FileDeleteHookTest.java
==================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/GitProjectSetCapabilityTest.java
===========================================================================================



Line No: 128 


Line No: 131 


Line No: 138 


Line No: 143 


Line No: 144 


Line No: 145 


Line No: 146 ------->
Mystry Guest smell found
 [Lines Optional[(line 124,col 44)] - Optional[(line 149,col 2)] ] 

{
    IProject aProject = createProject("a");
    File aRepo = createRepository(aProject.getLocation(), "http://example.org/repo-a", "master");
    connectProject(aProject, aRepo);
    IPath bPath = ResourcesPlugin.getWorkspace().getRoot().getLocation().append("b");
    File bRepo = createRepository(bPath, "http://example.org/repo-b", "master");
    IProject baProject = createProject(bPath, "ba");
    IProject bbProject = createProject(bPath, "bb");
    connectProject(baProject, bRepo);
    connectProject(bbProject, bRepo);
    pathsToClean.add(bPath.toFile());
    IProject cProject = createProject("c");
    File cRepo = createRepository(cProject.getLocation(), "http://example.org/repo-c", "stable");
    connectProject(cProject, cRepo);
    IProject[] projects = new IProject[] { aProject, baProject, bbProject, cProject };
    String[] references = capability.asReference(projects, new ProjectSetSerializationContext(), new NullProgressMonitor());
    assertEquals(4, references.length);
    assertEquals("1.0,http://example.org/repo-a,master,.", references[0]);
    assertEquals("1.0,http://example.org/repo-b,master,ba", references[1]);
    assertEquals("1.0,http://example.org/repo-b,master,bb", references[2]);
    assertEquals("1.0,http://example.org/repo-c,stable,.", references[3]);
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/GitResourceDeltaTestHelper.java
==========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/GitURITest.java
==========================================================================



Line No: 41 ------->
Mystry Guest smell found
 [Lines Optional[(line 38,col 69)] - Optional[(line 41,col 2)] ] 

{
    URI.create("scm:git:git://git.eclipse.org/gitroot/platform/eclipse.platform.team.git;path=\"bundles/org.eclipse.team.core\"");
// expected IAE, " are not allowed in a URI reference
}



Line No: 48 ------->
Mystry Guest smell found
 [Lines Optional[(line 45,col 62)] - Optional[(line 49,col 2)] ] 

{
    new GitURI(URI.create("scm:git:git://git.eclipse.org/gitroot/cdo/cdo.git"));
// expected IAE, it doesn't contain semicolon and path part
}



Line No: 63 


Line No: 67 


Line No: 71 ------->
Mystry Guest smell found
 [Lines Optional[(line 60,col 52)] - Optional[(line 77,col 2)] ] 

{
    ScmUrlImportDescription description = new ScmUrlImportDescription("scm:git:git://git.eclipse.org/gitroot/platform/eclipse.platform.team.git;path=\"bundles/org.eclipse.team.core\"", null);
    URI uri = description.getUri();
    GitURI gitUri = new GitURI(uri);
    assertEquals("bundles/org.eclipse.team.core", gitUri.getPath().toString());
    URIish uriish = new URIish("git://git.eclipse.org/gitroot/platform/eclipse.platform.team.git");
    assertEquals(uriish, gitUri.getRepository());
    assertEquals(Constants.MASTER, gitUri.getTag());
    String refString = capability.asReference(uri, "org.eclipse.team.core");
    assertEquals("1.0,git://git.eclipse.org/gitroot/platform/eclipse.platform.team.git,master,bundles/org.eclipse.team.core", refString);
}



Line No: 83 


Line No: 87 


Line No: 91 ------->
Mystry Guest smell found
 [Lines Optional[(line 80,col 58)] - Optional[(line 96,col 2)] ] 

{
    ScmUrlImportDescription description = new ScmUrlImportDescription("scm:git:git://git.eclipse.org/gitroot/platform/eclipse.platform.ui.git;path=\"bundles/org.eclipse.jface\";tag=v20111107-2125", null);
    URI uri = description.getUri();
    GitURI gitUri = new GitURI(uri);
    assertEquals("bundles/org.eclipse.jface", gitUri.getPath().toString());
    URIish uriish = new URIish("git://git.eclipse.org/gitroot/platform/eclipse.platform.ui.git");
    assertEquals(uriish, gitUri.getRepository());
    assertEquals("v20111107-2125", gitUri.getTag());
    String refString = capability.asReference(uri, "org.eclipse.jface");
    assertEquals("1.0,git://git.eclipse.org/gitroot/platform/eclipse.platform.ui.git,v20111107-2125,bundles/org.eclipse.jface", refString);
}



Line No: 102 


Line No: 106 


Line No: 111 ------->
Mystry Guest smell found
 [Lines Optional[(line 99,col 65)] - Optional[(line 118,col 2)] ] 

{
    ScmUrlImportDescription description = new ScmUrlImportDescription("scm:git:git://git.eclipse.org/gitroot/equinox/rt.equinox.bundles.git;path=\"bundles/org.eclipse.equinox.http.jetty6\";project=\"org.eclipse.equinox.http.jetty\";tag=v20111010-1614", null);
    URI uri = description.getUri();
    GitURI gitUri = new GitURI(uri);
    assertEquals("bundles/org.eclipse.equinox.http.jetty6", gitUri.getPath().toString());
    URIish uriish = new URIish("git://git.eclipse.org/gitroot/equinox/rt.equinox.bundles.git");
    assertEquals(uriish, gitUri.getRepository());
    assertEquals("v20111010-1614", gitUri.getTag());
    assertEquals("org.eclipse.equinox.http.jetty", gitUri.getProjectName());
    String refString = capability.asReference(uri, "org.eclipse.equinox.http.jetty");
    assertEquals("1.0,git://git.eclipse.org/gitroot/equinox/rt.equinox.bundles.git,v20111010-1614,bundles/org.eclipse.equinox.http.jetty6", refString);
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/HistoryTest.java
===========================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/internal/mapping/HistoryTest.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/JobSchedulingAssert.java
===================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/LinkedResourcesTest.java
===================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/MergeWithPreferredStrategyTest.java
==============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/models/ModelTestCase.java
====================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/models/SampleModelAdapterFactory.java
================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/models/SampleModelProvider.java
==========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/models/SampleResourceMapping.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/models/SampleResourceMappingMerger.java
==================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/AddOperationTest.java
===================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/BranchOperationTest.java
======================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/CloneOperationTest.java
=====================================================================================



Line No: 107 ------->
Mystry Guest smell found
 [Lines Optional[(line 104,col 63)] - Optional[(line 124,col 2)] ] 

{
    URIish uri = new URIish("file:///" + repository1.getRepository().getDirectory().toString());
    CloneOperation clop = new CloneOperation(uri, true, null, workdir2, refName, "origin", 0);
    clop.run(null);
    Repository clonedRepo = FileRepositoryBuilder.create(new File(workdir2, Constants.DOT_GIT));
    assertEquals("", uri.toString(), clonedRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, "origin", "url"));
    assertEquals("", "+refs/heads/*:refs/remotes/origin/*", clonedRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, "origin", "fetch"));
}



Line No: 130 ------->
Mystry Guest smell found
 [Lines Optional[(line 127,col 57)] - Optional[(line 146,col 2)] ] 

{
    URIish uri = new URIish("file:///" + repository1.getRepository().getDirectory().toString());
    CloneOperation clop = new CloneOperation(uri, true, null, workdir2, "refs/heads/master", "origin", 0);
    final File[] repoDir = new File[1];
    clop.addPostCloneTask(new PostCloneTask() {

        @Override
        public void execute(Repository repository, IProgressMonitor monitor) throws CoreException {
            repoDir[0] = repository.getDirectory();
        }
    });
    clop.run(null);
    File newRepoDir = new File(workdir2, Constants.DOT_GIT);
    assertEquals(newRepoDir, repoDir[0]);
}



Line No: 152 


Line No: 154 


Line No: 158 ------->
Mystry Guest smell found
 [Lines Optional[(line 149,col 65)] - Optional[(line 172,col 2)] ] 

{
    URIish uri = new URIish("file:///" + repository1.getRepository().getDirectory().toString());
    CloneOperation clop = new CloneOperation(uri, true, null, workdir2, "refs/heads/master", "origin", 0);
    clop.addPostCloneTask(new ConfigurePushAfterCloneTask("origin", "HEAD:refs/for/master", new URIish("file:///pushtarget")));
    clop.run(null);
    Repository clonedRepo = FileRepositoryBuilder.create(new File(workdir2, Constants.DOT_GIT));
    assertEquals("", "HEAD:refs/for/master", clonedRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, "origin", "push"));
    assertEquals("", "file:///pushtarget", clonedRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, "origin", "pushurl"));
}



Line No: 179 ------->
Mystry Guest smell found
 [Lines Optional[(line 175,col 66)] - Optional[(line 195,col 2)] ] 

{
    createNoteInOrigin();
    URIish uri = new URIish("file:///" + repository1.getRepository().getDirectory().toString());
    CloneOperation clop = new CloneOperation(uri, true, null, workdir2, "refs/heads/master", "origin", 0);
    clop.addPostCloneTask(new ConfigureFetchAfterCloneTask("origin", "refs/notes/review:refs/notes/review"));
    clop.run(null);
    Repository clonedRepo = FileRepositoryBuilder.create(new File(workdir2, Constants.DOT_GIT));
    assertTrue(clonedRepo.getConfig().getStringList(ConfigConstants.CONFIG_REMOTE_SECTION, "origin", "fetch")[1].equals("refs/notes/review:refs/notes/review"));
    Git clonedGit = new Git(clonedRepo);
    assertEquals(1, clonedGit.notesList().setNotesRef("refs/notes/review").call().size());
    clonedGit.close();
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/CommitOperationTest.java
======================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/ConnectProviderOperationTest.java
===============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/CreatePatchOperationTest.java
===========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/DeletePathsOperationTest.java
===========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/DiscardChangesOperationTest.java
==============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/EditCommitOperationTest.java
==========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/IgnoreOperationTest.java
======================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/ListRemoteOperationTest.java
==========================================================================================



Line No: 66 ------->
Mystry Guest smell found
 [Lines Optional[(line 51,col 39)] - Optional[(line 89,col 2)] ] 

{
    workdir = testUtils.createTempDir("Repository1");
    workdir2 = testUtils.createTempDir("Repository2");
    repository1 = new TestRepository(new File(workdir, Constants.DOT_GIT));
    // now we create a project in repo1
    IProject project = testUtils.createProjectInLocalFileSystem(workdir, projectName);
    testUtils.addFileToProject(project, "folder1/file1.txt", "Hello world");
    repository1.connect(project);
    repository1.trackAllFiles(project);
    repository1.commit("Initial commit");
    // let's get rid of the project
    project.delete(false, false, null);
    // let's clone repository1 to repository2
    URIish uri = new URIish("file:///" + repository1.getRepository().getDirectory().toString());
    CloneOperation clop = new CloneOperation(uri, true, null, workdir2, "refs/heads/master", "origin", 0);
    clop.run(null);
    Repository existingRepo = Activator.getDefault().getRepositoryCache().lookupRepository(new File(workdir2, Constants.DOT_GIT));
    repository2 = new TestRepository(existingRepo);
    // we push to branch "test" of repository2
    RefUpdate createBranch = repository2.getRepository().updateRef("refs/heads/test");
    createBranch.setNewObjectId(repository2.getRepository().resolve("refs/heads/master"));
    createBranch.update();
}



Line No: 107 


Line No: 112 ------->
Mystry Guest smell found
 [Lines Optional[(line 104,col 48)] - Optional[(line 120,col 2)] ] 

{
    URIish uri = new URIish("file:///" + repository2.getRepository().getDirectory().getPath());
    ListRemoteOperation lrop = new ListRemoteOperation(repository1.getRepository(), uri, 0);
    lrop.run(null);
    assertEquals(4, lrop.getRemoteRefs().size());
    assertNotNull(lrop.getRemoteRef("refs/heads/test"));
    uri = new URIish("file:///" + repository1.getRepository().getDirectory().getPath());
    lrop = new ListRemoteOperation(repository2.getRepository(), uri, 0);
    lrop.run(new NullProgressMonitor());
    assertEquals(2, lrop.getRemoteRefs().size());
    assertNotNull(lrop.getRemoteRef("refs/heads/master"));
}



Line No: 131 ------->
Mystry Guest smell found
 [Lines Optional[(line 128,col 59)] - Optional[(line 140,col 2)] ] 

{
    URIish uri = new URIish("file:///" + repository2.getRepository().getDirectory().getPath());
    ListRemoteOperation lrop = new ListRemoteOperation(repository1.getRepository(), uri, 0);
    try {
        lrop.getRemoteRefs();
        fail("Expected Exception not thrown");
    } catch (IllegalStateException e) {
    // expected
    }
}



Line No: 151 ------->
Mystry Guest smell found
 [Lines Optional[(line 148,col 48)] - Optional[(line 159,col 2)] ] 

{
    URIish uri = new URIish("file:///" + "no/path");
    ListRemoteOperation lrop = new ListRemoteOperation(repository1.getRepository(), uri, 0);
    try {
        lrop.run(new NullProgressMonitor());
        fail("Expected Exception not thrown");
    } catch (InvocationTargetException e) {
    // expected
    }
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/MergeOperationTest.java
=====================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/PushOperationTest.java
====================================================================================



Line No: 330 ------->
Mystry Guest smell found
 [Lines Optional[(line 323,col 63)] - Optional[(line 340,col 2)] ] 

{
    // set up push from repository1 to repository2
    // we cannot re-use the RemoteRefUpdate!!!
    PushOperationSpecification spec = new PushOperationSpecification();
    // the remote is repo2
    URIish remote = new URIish("file:///" + repository2.getRepository().getDirectory().toString());
    // update master upon master
    List<RemoteRefUpdate> refUpdates = new ArrayList<RemoteRefUpdate>();
    RemoteRefUpdate update = new RemoteRefUpdate(repository1.getRepository(), "HEAD", "refs/heads/test", false, null, null);
    refUpdates.add(update);
    spec.addURIRefUpdates(remote, refUpdates);
    // now we can construct the push operation
    PushOperation pop = new PushOperation(repository1.getRepository(), spec, false, 0);
    return pop;
}

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/RebaseOperationTest.java
======================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/RemoveFromIndexOperationTest.java
===============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/ResetOperationTest.java
=====================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/RewordCommitsOperationTest.java
=============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/SquashCommitsOperationTest.java
=============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/StashCreateOperationTest.java
===========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/TagOperationTest.java
===================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/op/TrackUntrackOperationTest.java
============================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/PreferredMergeStrategyTest.java
==========================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/ProjectReferenceTest.java
====================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/rebase/RebaseInteractivePlanTest.java
================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/RepositoryCacheTest.java
===================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/RevUtilsTest.java
============================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/SubmoduleAndContainerTreeIteratorTest.java
=====================================================================================================

/org.eclipse.egit.core.test/src/org/eclipse/egit/core/test/UtilsTest.java
=========================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/Activator.java
=====================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/BranchNameValidator.java
===============================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/GitFlowConfig.java
=========================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/GitFlowDefaults.java
===========================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/GitFlowRepository.java
=============================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/InitParameters.java
==========================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/internal/CoreText.java
=============================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/AbstractFeatureOperation.java
=======================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/AbstractHotfixOperation.java
======================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/AbstractReleaseOperation.java
=======================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/AbstractVersionFinishOperation.java
=============================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/CurrentBranchPublishOperation.java
============================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureCheckoutOperation.java
=======================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureFinishOperation.java
=====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureListOperation.java
===================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureRebaseOperation.java
=====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureStartOperation.java
====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/FeatureTrackOperation.java
====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java
===============================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/HotfixFinishOperation.java
====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/HotfixStartOperation.java
===================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/InitOperation.java
============================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/ReleaseFinishOperation.java
=====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/ReleaseStartOperation.java
====================================================================================

/org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/WrongGitFlowStateException.java
======================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/GitFlowRepositoryConfigTest.java
============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/GitFlowRepositoryTest.java
======================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/AbstractDualRepositoryTestCase.java
==================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/AbstractFeatureOperationTest.java
================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/AbstractGitFlowOperationTest.java
================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/CurrentBranchPublishOperationTest.java
=====================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureCheckoutOperationTest.java
================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureFinishOperationTest.java
==============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureListOperationTest.java
============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureRebaseOperationTest.java
==============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureStartOperationDivergingTest.java
======================================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureStartOperationTest.java
=============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/FeatureTrackOperationTest.java
=============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/HotfixFinishOperationTest.java
=============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/HotfixStartOperationTest.java
============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/InitOperationTest.java
=====================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/ReleaseFinishOperationTest.java
==============================================================================================

/org.eclipse.egit.gitflow.test/src/org/eclipse/egit/gitflow/op/ReleaseStartOperationTest.java
=============================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/Activator.java
===========================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/AbstractGitFlowHandler.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/AbstractPublishHandler.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/DevelopCheckoutHandler.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/DevelopCompareHandler.java
========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/DevelopReplaceHandler.java
========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureCheckoutHandler.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureFinishHandler.java
=======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeaturePublishHandler.java
========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureRebaseHandler.java
=======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureStartHandler.java
======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureTrackHandler.java
======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/GitFlowHandlerUtil.java
=====================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/HotfixFinishHandler.java
======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/HotfixPublishHandler.java
=======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/HotfixStartHandler.java
=====================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/InitHandler.java
==============================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/PostBranchCheckoutUiTask.java
===========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/ReleaseFinishHandler.java
=======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/ReleasePublishHandler.java
========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/ReleaseStartFromCommitHandler.java
================================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/ReleaseStartHandler.java
======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/StartDialog.java
==============================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/decorators/GitFlowLightweightDecorator.java
=================================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/BranchComparator.java
===================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/BranchListContentProvider.java
============================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/DecoratedBranchLabelProvider.java
===============================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/FeatureBranchSelectionDialog.java
===============================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/FilteredBranchesWidget.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/FinishFeatureDialog.java
======================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/dialogs/InitDialog.java
=============================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/factories/GitFlowAdapterFactory.java
==========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/JobFamilies.java
======================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/menu/DynamicHistoryMenu.java
==================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/properties/RepositoryPropertyTester.java
==============================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/UIIcons.java
==================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/UIPreferences.java
========================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/UIText.java
=================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/validation/BranchNameInputValidator.java
==============================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/validation/FeatureNameValidator.java
==========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/validation/HotfixNameValidator.java
=========================================================================================================

/org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/validation/ReleaseNameValidator.java
==========================================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/commit/ActiveTaskBranchNameProvider.java
==========================================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/commit/CommitTextTaskActivationListener.java
==============================================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/commit/MylynCommitMessageProvider.java
========================================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/commit/TaskReferenceFactory.java
==================================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/CommitHyperlinkDetector.java
==============================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/EGitMylynUI.java
==================================================================================

/org.eclipse.egit.mylyn.ui/src/org/eclipse/egit/internal/mylyn/ui/Messages.java
===============================================================================

/org.eclipse.egit.mylyn.ui.test/src/org/eclipse/egit/internal/mylyn/CommitHyperlinkDetectorTest.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/Activator.java
===========================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/CommitMessageWithCaretPosition.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/GitRepositoriesPerspectiveFactory.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/IBranchNameProvider.java
=====================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/ICommitMessageProvider.java
========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/ICommitMessageProvider2.java
=========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ActionCommands.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/AddToIndexAction.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/AddToIndexActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ApplyPatchAction.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ApplyPatchActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/AssumeUnchangedActionHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/BooleanPrefAction.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/BranchAction.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/BranchActionHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CleanActionHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CommitAction.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CommitActionHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareIndexWithHeadActionHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareWithCommitActionHandler.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareWithHeadActionHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareWithIndexActionHandler.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareWithPreviousActionHandler.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CompareWithRefActionHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ConfigureFetchAction.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ConfigureFetchActionHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ConfigurePushAction.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ConfigurePushActionHandler.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/CreatePatchActionHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/DeleteBranchAction.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/DeleteBranchActionHandler.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/DiscardChangesActionHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/DisconnectActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/FetchAction.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/FetchActionHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/IgnoreActionHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/MergeAction.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/MergeActionHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/MergeToolAction.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/MergeToolActionHandler.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/NoAssumeUnchangedActionHandler.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PullFromUpstreamActionHandler.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PullFromUpstreamConfigAction.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PullWithOptionsAction.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PullWithOptionsActionHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushAction.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushActionHandler.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushBranchActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushMenu.java
===========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushTagsActionHandler.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushUpstreamOrBranchAction.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/PushUpstreamOrBranchActionHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RebaseAction.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RebaseActionHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RemoveFromIndexActionHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RenameBranchActionHandler.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ReplaceWithCommitActionHandler.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ReplaceWithHeadActionHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ReplaceWithOursTheirsMenu.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ReplaceWithPreviousActionHandler.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ReplaceWithRefActionHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RepositoryAction.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RepositoryActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ResetAction.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ResetActionHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ResetMenu.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ShowBlameActionHandler.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ShowHistoryActionHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ShowInSystemExplorerActionHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ShowRepositoriesViewActionHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SimpleFetchAction.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SimpleFetchActionHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SimplePushActionHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/StashCreateHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/StashesMenu.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/StashToolbarAction.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SwitchToMenu.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SynchronizeWithMenu.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SynchronizeWorkspaceAction.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/SynchronizeWorkspaceActionHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/TagActionHandler.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/UntrackActionHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/ActionUtils.java
======================================================================



Line No: 132 ------->
Mystry Guest smell found
 [Lines Optional[(line 128,col 23)] - Optional[(line 138,col 2)] ] 

{
    if (operationCode == ITextOperationTarget.REDO) {
        // https://bugs.eclipse.org/bugs/show_bug.cgi?id=206111
        return createGlobalAction(factory, () -> target.doOperation(operationCode), () -> true);
    }
    return createGlobalAction(factory, () -> target.doOperation(operationCode), () -> target.canDoOperation(operationCode));
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/blame/AuthorColors.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/blame/BlameInformationControl.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/blame/BlameInformationControlCreator.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/blame/BlameOperation.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/blame/BlameRevision.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/BranchOperationUI.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/BranchProjectTracker.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/DebugUIPluginFacade.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/IDebugUIPluginFacade.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/LaunchFinder.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/MultiBranchOperationResultDialog.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/NoopDebugUIPluginFacade.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/ProjectTrackerMemento.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/ProjectTrackerPreferenceHelper.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/branch/ProjectTrackerPreferenceSnapshot.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clean/CleanRepositoryPage.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clean/CleanWizard.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clean/CleanWizardDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/ClipboardUtils.java
=========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/AbstractGitCloneWizard.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/CloneDestinationPage.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitCloneDropAdapter.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitCloneSourceProviderExtension.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitCloneWizard.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitCreateGeneralProjectPage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitCreateProjectViaWizardWizard.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitImportWizard.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitProjectsImportPage.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitSelectRepositoryPage.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitSelectWizardPage.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/GitUrlChecker.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/ProjectRecord.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/ProjectUtils.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/RememberHostTask.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/RepositoryLocationContentProvider.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/RepositoryLocationLabelProvider.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/RepositoryLocationPage.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/SmartImportGitWizard.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/clone/SourceBranchPage.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/ConfigureDebugTraceCommand.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/ProjectNameParameterValues.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/AbortRebaseCommand.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/AbstractRebaseCommandHandler.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/AbstractSharedCommandHandler.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/ContinueRebaseCommand.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/FetchChangeFromGerritCommand.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/ProcessStepsRebaseCommand.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/PushHeadToGerritCommand.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/RebaseCurrentRefCommand.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/shared/SkipRebaseCommand.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commands/ShareSingleProjectCommand.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/CheckoutHandler.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/CherryPickHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/CherryPickUI.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/CommitCommandHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/CreateBranchHandler.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/EditHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/RevertHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/RewordHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/ShowInHistoryHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/SquashHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/StashApplyHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/command/StashDropHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitEditor.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitEditorActionBarContributor.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitEditorInput.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitEditorInputFactory.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitEditorPage.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitHelper.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitJob.java
===========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitMessageHistory.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitProposalProcessor.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitSelectionDialog.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/CommitUI.java
==========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/DiffDocument.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/DiffEditorOutlinePage.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/DiffEditorPage.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/DiffRegionFormatter.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/DiffViewer.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/FocusManagerFormPart.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/FocusTracker.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/HeaderText.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/ILogicalLineNumberProvider.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/LogicalLineNumberProvider.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/LogicalLineNumberRulerColumn.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/MultiPageEditorContentOutlinePage.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/NestedContentOutlinePage.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/NoteDetailsPage.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/NotesBlock.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/NotesEditorPage.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/OldNewLogicalLineNumberRulerColumn.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/OpenCommitAction.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/RepositoryCommit.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/RepositoryCommitNote.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/commit/StashEditorPage.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/CommonUtils.java
======================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/CompareUtils.java
=======================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/AsynchronousBranchList.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/AsynchronousListOperation.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/AsynchronousRefProposalProvider.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/BranchNameNormalizer.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/BranchRebaseModeCombo.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/CachedCheckboxTreeViewer.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/CenteredImageLabelProvider.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/ClickableCellEditor.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/ComboLabelingSupport.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/ControlLabelProvider.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/DropDownMenuAction.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/FilteredCheckboxTree.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/PartVisibilityListener.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RefContentAssistProvider.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RefContentProposal.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RefSpecPage.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RefSpecPanel.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RemoteSelectionCombo.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RepositoryMenuUtil.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RepositorySelection.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/RepositorySelectionPage.java
=============================================================================================



Line No: 543 ------->
Mystry Guest smell found
 [Lines Optional[(line 480,col 59)] - Optional[(line 577,col 2)] ] 

{
    final Group g = createGroup(parent, UIText.RepositorySelectionPage_groupLocation);
    g.setLayout(new GridLayout(3, false));
    // $NON-NLS-1$
    newLabel(g, UIText.RepositorySelectionPage_promptURI + ":");
    uriText = new Text(g, SWT.BORDER);
    if (presetUri != null) {
        uriText.setText(presetUri);
        uriText.selectAll();
    }
    uriText.setLayoutData(createFieldGridData());
    uriText.addModifyListener(new ModifyListener() {

        @Override
        public void modifyText(final ModifyEvent e) {
            updateFields(uriText.getText());
        }
    });
    uriProposalHandler = UIUtils.addPreviousValuesContentProposalToText(uriText, USED_URIS_PREF);
    Button browseButton = new Button(g, SWT.NULL);
    browseButton.setText(UIText.RepositorySelectionPage_BrowseLocalFile);
    browseButton.addSelectionListener(new SelectionAdapter() {

        @Override
        public void widgetSelected(SelectionEvent evt) {
            DirectoryDialog dialog = new DirectoryDialog(getShell());
            if (sourceSelection) {
                dialog.setMessage(UIText.RepositorySelectionPage_sourceSelectionTitle);
            } else {
                dialog.setMessage(UIText.RepositorySelectionPage_destinationSelectionTitle);
            }
            // the directory dialog on the same directory
            if (!uriText.getText().isEmpty()) {
                try {
                    // first we try if this is a simple file name
                    File testFile = new File(uriText.getText());
                    if (testFile.exists()) {
                        dialog.setFilterPath(testFile.getPath());
                    } else {
                        // this could still be a file URIish
                        URIish testUri = new URIish(uriText.getText());
                        if (Protocol.FILE.defaultScheme.equals(testUri.getScheme())) {
                            testFile = new File(testUri.getPath());
                            if (testFile.exists()) {
                                dialog.setFilterPath(testFile.getPath());
                            }
                        }
                    }
                } catch (IllegalArgumentException | URISyntaxException e) {
                // ignore here, we just' don't set the directory in the
                // browser
                }
            }
            // if nothing else, we start the search from the default folder for repositories
            String filterPath = dialog.getFilterPath();
            if (filterPath == null || filterPath.isEmpty()) {
                dialog.setFilterPath(RepositoryUtil.getDefaultRepositoryDir());
            }
            String result = dialog.open();
            if (result != null) {
                // $NON-NLS-1$
                uriText.setText("file:///" + result);
            }
        }
    });
    // $NON-NLS-1$
    newLabel(g, UIText.RepositorySelectionPage_promptHost + ":");
    hostText = new Text(g, SWT.BORDER);
    GridDataFactory.fillDefaults().span(2, 1).applyTo(hostText);
    hostText.addModifyListener(new ModifyListener() {

        @Override
        public void modifyText(final ModifyEvent e) {
            setURI(uri.setHost(nullString(hostText.getText())));
        }
    });
    // $NON-NLS-1$
    newLabel(g, UIText.RepositorySelectionPage_promptPath + ":");
    pathText = new Text(g, SWT.BORDER);
    GridDataFactory.fillDefaults().span(2, 1).applyTo(pathText);
    pathText.addModifyListener(new ModifyListener() {

        @Override
        public void modifyText(final ModifyEvent e) {
            setURI(uri.setPath(nullString(pathText.getText())));
        }
    });
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/SelectionChangeListener.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/TitleAndImageDialog.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/ToggleableWarningLabel.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/components/UpstreamConfigComponent.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/ConfigurationChecker.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/credentials/EGitCredentialsProvider.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/credentials/LoginDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/credentials/LoginService.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/DecorationOverlayDescriptor.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableResource.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceAdapter.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceGroup.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceHelper.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceMapping.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecoratableWorkingSet.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/DecorationResult.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/GitDecorator.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/GitDocument.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/GitLightweightDecorator.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/GitQuickDiffProvider.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/IDecoratableResource.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/IProblemDecoratable.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/decorators/ProblemLabelDecorator.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/AbstractBranchSelectionDialog.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/AbstractConfigureRemoteDialog.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BasicConfigurationDialog.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BranchConfigurationDialog.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BranchEditDialog.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BranchRenameDialog.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BranchSelectionAndEditDialog.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/BranchSelectionDialog.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CancelableFuture.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CheckoutDialog.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CleanupUncomittedChangesDialog.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommandConfirmation.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitCombo.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitDialog.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitLabelProvider.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageArea.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageBuilder.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageComponent.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageComponentState.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageComponentStateManager.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CommitSelectDialog.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CompareTargetSelectionDialog.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CompareTreeView.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CreateTagDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/CustomPromptDialog.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/DeleteBranchDialog.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/FileTreeContentProvider.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/FileTreeLabelProvider.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/FinishableWizardDialog.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/GitTraceConfigurationDialog.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/HyperlinkSourceViewer.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/HyperlinkTokenScanner.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/ICommitMessageComponentNotifications.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/MergeTargetSelectionDialog.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/MinimumSizeWizardDialog.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/NewRemoteDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/NonBlockingWizardDialog.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/NonDeletedFilesDialog.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/NonDeletedFilesTree.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/RebaseTargetSelectionDialog.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/RenameBranchDialog.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/ReplaceTargetSelectionDialog.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/ResetTargetSelectionDialog.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/RevertFailureDialog.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/ShowWhitespaceAction.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/SourceBranchFailureDialog.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/SpellcheckableMessageArea.java
============================================================================================



Line No: 333 


Line No: 361 ------->
Mystry Guest smell found
 [Lines Optional[(line 307,col 35)] - Optional[(line 371,col 2)] ] 

{
    if (shouldHardWrap()) {
        if (hardWrapSegmentListener == null) {
            final StyledText textWidget = getTextWidget();
            hardWrapSegmentListener = new BidiSegmentListener() {

                @Override
                public void lineGetSegments(BidiSegmentEvent e) {
                    if (e.widget == textWidget) {
                        int footerOffset = CommonUtils.getFooterOffset(textWidget.getText());
                        if (footerOffset >= 0 && e.lineOffset >= footerOffset) {
                            return;
                        }
                    }
                    int[] segments = calculateWrapOffsets(e.lineText, MAX_LINE_WIDTH);
                    if (segments != null) {
                        char[] segmentsChars = new char[segments.length];
                        Arrays.fill(segmentsChars, '\n');
                        e.segments = segments;
                        e.segmentsChars = segmentsChars;
                    }
                }
            };
            textWidget.addBidiSegmentListener(hardWrapSegmentListener);
            // XXX: workaround for https://bugs.eclipse.org/384886
            textWidget.setText(textWidget.getText());
            if (brokenBidiPlatformTextWidth != -1) {
                Layout restrictedWidthLayout = new Layout() {

                    @Override
                    protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache) {
                        Point size = SpellcheckableMessageArea.this.getSize();
                        Rectangle trim = SpellcheckableMessageArea.this.computeTrim(0, 0, 0, 0);
                        size.x -= trim.width;
                        size.y -= trim.height;
                        if (size.x > brokenBidiPlatformTextWidth)
                            size.x = brokenBidiPlatformTextWidth;
                        return size;
                    }

                    @Override
                    protected void layout(Composite composite, boolean flushCache) {
                        Point size = computeSize(composite, SWT.DEFAULT, SWT.DEFAULT, flushCache);
                        textWidget.setBounds(0, 0, size.x, size.y);
                    }
                };
                setLayout(restrictedWidthLayout);
            }
        }
    } else if (hardWrapSegmentListener != null) {
        StyledText textWidget = getTextWidget();
        textWidget.removeBidiSegmentListener(hardWrapSegmentListener);
        // XXX: workaround for https://bugs.eclipse.org/384886
        textWidget.setText(textWidget.getText());
        hardWrapSegmentListener = null;
        if (brokenBidiPlatformTextWidth != -1)
            setLayout(new FillLayout());
    }
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/TextEditorPropertyAction.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/dialogs/UnmergedBranchDialog.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/EgitUiEditorUtils.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/expressions/AbstractPropertyTester.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/expressions/BundlePropertyTester.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/expressions/GitPropertyTester.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/factories/GitAdapterFactory.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchDestinationPage.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchGerritChangePage.java
======================================================================================



Line No: 605 ------->
Mystry Guest smell found
 [Lines Optional[(line 584,col 66)] - Optional[(line 636,col 2)] ] 

{
    if (input == null) {
        return null;
    }
    try {
        Matcher matcher = GERRIT_URL_PATTERN.matcher(input);
        if (matcher.matches()) {
            String first = matcher.group(1);
            String second = matcher.group(2);
            String third = matcher.group(3);
            if (second != null && !second.isEmpty()) {
                if (third != null && !third.isEmpty()) {
                    return Change.create(Integer.parseInt(second), Integer.parseInt(third));
                } else if (input.startsWith("http")) {
                    // change number
                    return Change.create(Integer.parseInt(first), Integer.parseInt(second));
                } else {
                    // Take the numerically larger. Might be a fragment like
                    // /10/65510 as in refs/changes/10/65510/6, or /65510/6
                    // as in https://git.eclipse.org/r/#/c/65510/6. This is
                    // a heuristic, it might go wrong on a Gerrit where
                    // there are not many changes (yet), and one of them has
                    // many patch sets.
                    int firstNum = Integer.parseInt(first);
                    int secondNum = Integer.parseInt(second);
                    if (firstNum > secondNum) {
                        return Change.create(firstNum, secondNum);
                    } else {
                        return Change.create(secondNum);
                    }
                }
            } else {
                return Change.create(Integer.parseInt(first));
            }
        }
        matcher = GERRIT_CHANGE_REF_PATTERN.matcher(input);
        if (matcher.matches()) {
            int firstNum = Integer.parseInt(matcher.group(2));
            String second = matcher.group(3);
            if (second != null) {
                return Change.create(firstNum, Integer.parseInt(second));
            } else {
                return Change.create(firstNum);
            }
        }
    } catch (NumberFormatException e) {
    // Numerical overflow?
    }
    return null;
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchGerritChangeWizard.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchHeadChangedEvent.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchOperationUI.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchResultDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchResultTable.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchSourcePage.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchWizard.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/SimpleConfigureFetchDialog.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/SimpleFetchRefSpecWizard.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/TrackingRefUpdateContentProvider.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/gerrit/ConfigureGerritWizard.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/gerrit/GerritConfigurationPage.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/gerrit/GerritDialogSettings.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/gerrit/GerritSelectRepositoryPage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/GitLabelProvider.java
===========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/GitLabels.java
====================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/handler/SelectionHandler.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/AbstractHistoryCommandHandler.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/AbstractRebaseHistoryCommandHandler.java
==============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/CheckoutCommitHandler.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/CompareVersionsHandler.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/CompareVersionsInTreeHandler.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/CompareWithWorkingTreeHandler.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/CreatePatchHandler.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/DeleteBranchOnCommitHandler.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/DeleteTagOnCommitHandler.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/EditHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/ImportChangedProjectsCommand.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/MergeHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/OpenInCommitViewerHandler.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/OpenInTextEditorHandler.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/PushCommitHandler.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/RebaseCurrentHandler.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/RebaseInteractiveCurrentHandler.java
==========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/RenameBranchOnCommitHandler.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/ResetHandler.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/ResetQuickdiffBaselineHandler.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/RewordHandler.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/SetQuickdiffBaselineHandler.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/ShowBlameHandler.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/ShowVersionsHandler.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/command/SquashHandler.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitAndDiffComponent.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitFileDiffViewer.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitGraphTable.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitGraphTableHoverManager.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitInfoBuilder.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitMessageViewer.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitNavigationListener.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/CommitSelectionDialog.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FileDiff.java
===========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FileDiffInput.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FileDiffLabelProvider.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FileDiffWorkbenchAdapter.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FindResults.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FindToolbar.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FindToolbarJob.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/FormatJob.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GenerateHistoryJob.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitCommitReference.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitCreatePatchWizard.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPage.java
=================================================================================



Line No: 1320 ------->
Mystry Guest smell found
 [Lines Optional[(line 1317,col 53)] - Optional[(line 1327,col 3)] ] 

{
    // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=551067
    IContributionManager parent = getParent();
    if (parent instanceof SubToolBarManager) {
        SubToolBarManager subManager = (SubToolBarManager) parent;
        IContributionItem item = subManager.getParent().find(getId());
        if (item instanceof SubContributionItem) {
            item.setVisible(visible && subManager.isVisible());
        }
    }
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPageSource.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPropertyTester.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistorySelectionTracker.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryWalk.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GraphContentProvider.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GraphLabelProvider.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/HistoryPageInput.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/IFindListener.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/LocationPage.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/RenameTracker.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/SWTCommit.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/SWTCommitList.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/SWTPlotRenderer.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/SWTWalk.java
==========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/TableLoader.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/importing/GitScmUrlImportWizardPage.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/jobs/RepositoryJob.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/jobs/RepositoryJobResultAction.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/KnownHosts.java
=====================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/LabelColumnComparator.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/merge/GitCompareEditorInput.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/merge/GitMergeEditorInput.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/merge/MergeModeDialog.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/merge/MergeResultDialog.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/operations/DeletePathsOperationUI.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/operations/GitScopeOperation.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/operations/GitScopeOperationFactory.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/operations/GitScopeUtil.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/operations/IgnoreOperationUI.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/patch/PatchOperationUI.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/PreferenceBasedDateFormatter.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/AddConfigEntryDialog.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/CommittingPreferencePage.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/ConfigurationEditorComponent.java
===================================================================================================



Line No: 307 ------->
Mystry Guest smell found
 [Lines Optional[(line 173,col 34)] - Optional[(line 431,col 2)] ] 

{
    final Composite main = new Composite(parent, SWT.NONE);
    GridLayoutFactory.fillDefaults().numColumns(2).margins(margin, 0).applyTo(main);
    GridDataFactory.fillDefaults().grab(true, true).applyTo(main);
    if (editableConfig instanceof FileBasedConfig) {
        Composite locationPanel = new Composite(main, SWT.NONE);
        GridLayout locationLayout = new GridLayout(3, false);
        locationLayout.marginWidth = 0;
        locationPanel.setLayout(locationLayout);
        GridDataFactory.fillDefaults().grab(true, false).span(2, 1).applyTo(locationPanel);
        Label locationLabel = new Label(locationPanel, SWT.NONE);
        locationLabel.setText(UIText.ConfigurationEditorComponent_ConfigLocationLabel);
        // GridDataFactory.fillDefaults().applyTo(locationLabel);
        int locationStyle = SWT.BORDER | SWT.READ_ONLY;
        location = new Text(locationPanel, locationStyle);
        GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).applyTo(location);
        Button openEditor = new Button(locationPanel, SWT.PUSH);
        openEditor.setText(UIText.ConfigurationEditorComponent_OpenEditorButton);
        openEditor.setToolTipText(UIText.ConfigurationEditorComponent_OpenEditorTooltip);
        openEditor.addSelectionListener(new SelectionAdapter() {

            @Override
            public void widgetSelected(SelectionEvent e) {
                IFileStore store = EFS.getLocalFileSystem().getStore(new Path(((FileBasedConfig) editableConfig).getFile().getAbsolutePath()));
                try {
                    IDE.openEditor(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage(), new FileStoreEditorInput(store), EditorsUI.DEFAULT_TEXT_EDITOR_ID);
                } catch (PartInitException ex) {
                    Activator.handleError(ex.getMessage(), ex, true);
                }
            }
        });
        openEditor.setEnabled(((FileBasedConfig) editableConfig).getFile() != null);
    }
    tv = new TreeViewer(main, SWT.SINGLE | SWT.FULL_SELECTION | SWT.BORDER);
    Tree tree = tv.getTree();
    GridDataFactory.fillDefaults().hint(100, 60).grab(true, true).applyTo(tree);
    TreeColumn key = new TreeColumn(tree, SWT.NONE);
    key.setText(UIText.ConfigurationEditorComponent_KeyColumnHeader);
    key.setWidth(150);
    final TextCellEditor editor = new TextCellEditor(tree);
    editor.setValidator(new ICellEditorValidator() {

        @Override
        public String isValid(Object value) {
            return value == null || value.toString().isEmpty() ? UIText.ConfigurationEditorComponent_EmptyStringNotAllowed : null;
        }
    });
    editor.addListener(new ICellEditorListener() {

        @Override
        public void editorValueChanged(boolean oldValidState, boolean newValidState) {
            setErrorMessage(editor.getErrorMessage());
        }

        @Override
        public void cancelEditor() {
            setErrorMessage(null);
        }

        @Override
        public void applyEditorValue() {
            setErrorMessage(null);
        }
    });
    TreeColumn value = new TreeColumn(tree, SWT.NONE);
    value.setText(UIText.ConfigurationEditorComponent_ValueColumnHeader);
    value.setWidth(250);
    new TreeViewerColumn(tv, value).setEditingSupport(new EditingSupport(tv) {

        @Override
        protected void setValue(Object element, Object newValue) {
            Entry entry = (Entry) element;
            if (!entry.value.equals(newValue)) {
                entry.changeValue(newValue.toString());
                markDirty();
            }
        }

        @Override
        protected Object getValue(Object element) {
            return ((Entry) element).value;
        }

        @Override
        protected CellEditor getCellEditor(Object element) {
            return editor;
        }

        @Override
        protected boolean canEdit(Object element) {
            return editable && element instanceof Entry;
        }
    });
    tv.setContentProvider(new WorkbenchContentProvider());
    Font defaultFont;
    if (useDialogFont)
        defaultFont = JFaceResources.getDialogFont();
    else
        defaultFont = JFaceResources.getDefaultFont();
    tv.setLabelProvider(new ConfigEditorLabelProvider(defaultFont));
    tree.setHeaderVisible(true);
    tree.setLinesVisible(true);
    Composite buttonPanel = new Composite(main, SWT.NONE);
    GridLayoutFactory.fillDefaults().applyTo(buttonPanel);
    GridDataFactory.fillDefaults().grab(false, false).applyTo(buttonPanel);
    newValue = new Button(buttonPanel, SWT.PUSH);
    GridDataFactory.fillDefaults().applyTo(newValue);
    newValue.setText(UIText.ConfigurationEditorComponent_AddButton);
    newValue.addSelectionListener(new SelectionAdapter() {

        @Override
        public void widgetSelected(SelectionEvent e) {
            String suggestedKey;
            IStructuredSelection sel = (IStructuredSelection) tv.getSelection();
            Object first = sel.getFirstElement();
            if (first instanceof Section)
                suggestedKey = ((Section) first).name + DOT;
            else if (first instanceof SubSection) {
                SubSection sub = (SubSection) first;
                suggestedKey = sub.parent.name + DOT + sub.name + DOT;
            } else if (first instanceof Entry) {
                Entry entry = (Entry) first;
                if (entry.sectionparent != null)
                    suggestedKey = entry.sectionparent.name + DOT;
                else
                    suggestedKey = entry.subsectionparent.parent.name + DOT + entry.subsectionparent.name + DOT;
            } else
                suggestedKey = null;
            AddConfigEntryDialog dlg = new AddConfigEntryDialog(getShell(), suggestedKey);
            if (dlg.open() == Window.OK) {
                String result = dlg.getKey();
                if (result == null) {
                    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=472110
                    return;
                }
                StringTokenizer st = new StringTokenizer(result, DOT);
                if (st.countTokens() == 2) {
                    String sectionName = st.nextToken();
                    String entryName = st.nextToken();
                    Entry entry = ((GitConfig) tv.getInput()).getEntry(sectionName, null, entryName);
                    if (entry == null)
                        editableConfig.setString(sectionName, null, entryName, dlg.getValue());
                    else
                        entry.addValue(dlg.getValue());
                    markDirty();
                    reveal(sectionName, null, entryName);
                } else if (st.countTokens() > 2) {
                    int n = st.countTokens();
                    String sectionName = st.nextToken();
                    StringBuilder b = new StringBuilder(st.nextToken());
                    for (int i = 0; i < n - 3; i++) {
                        b.append(DOT);
                        b.append(st.nextToken());
                    }
                    String subSectionName = b.toString();
                    String entryName = st.nextToken();
                    Entry entry = ((GitConfig) tv.getInput()).getEntry(sectionName, subSectionName, entryName);
                    if (entry == null)
                        editableConfig.setString(sectionName, subSectionName, entryName, dlg.getValue());
                    else
                        entry.addValue(dlg.getValue());
                    markDirty();
                    reveal(sectionName, subSectionName, entryName);
                } else
                    Activator.handleError(UIText.ConfigurationEditorComponent_WrongNumberOfTokensMessage, null, true);
            }
        }
    });
    remove = new Button(buttonPanel, SWT.PUSH);
    GridDataFactory.fillDefaults().applyTo(remove);
    remove.setText(UIText.ConfigurationEditorComponent_RemoveButton);
    remove.setToolTipText(UIText.ConfigurationEditorComponent_RemoveTooltip);
    remove.addSelectionListener(new SelectionAdapter() {

        @Override
        public void widgetSelected(SelectionEvent e) {
            IStructuredSelection sel = (IStructuredSelection) tv.getSelection();
            Object first = sel.getFirstElement();
            if (first instanceof Section) {
                Section section = (Section) first;
                if (MessageDialog.openConfirm(getShell(), UIText.ConfigurationEditorComponent_RemoveSectionTitle, NLS.bind(UIText.ConfigurationEditorComponent_RemoveSectionMessage, section.name))) {
                    editableConfig.unsetSection(section.name, null);
                    markDirty();
                }
            } else if (first instanceof SubSection) {
                SubSection section = (SubSection) first;
                if (MessageDialog.openConfirm(getShell(), UIText.ConfigurationEditorComponent_RemoveSubsectionTitle, NLS.bind(UIText.ConfigurationEditorComponent_RemoveSubsectionMessage, section.parent.name + DOT + section.name))) {
                    editableConfig.unsetSection(section.parent.name, section.name);
                    markDirty();
                }
            } else if (first instanceof Entry) {
                ((Entry) first).removeValue();
                markDirty();
            }
            super.widgetSelected(e);
        }
    });
    tv.addSelectionChangedListener(new ISelectionChangedListener() {

        @Override
        public void selectionChanged(SelectionChangedEvent event) {
            updateEnablement();
        }
    });
    initControlsFromConfig();
    contents = main;
    return contents;
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/DateFormatPreferencePage.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/DialogsPreferencePage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/DoublePreferencesPreferencePage.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/GitDecoratorPreferencePage.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/GitPreferenceRoot.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/GitProjectPropertyPage.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/GlobalConfigurationPreferencePage.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/HistoryColumnsPreferencePage.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/HistoryPreferencePage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/ProjectsPreferencePage.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/StagingViewPreferencePage.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/StorageSizeFieldEditor.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/SynchronizePreferencePage.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/preferences/WindowCachePreferencePage.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/GitRepositoryInfo.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/IRepositorySearchResult.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/IRepositoryServerProvider.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/NoRepositoryInfoException.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/NoRepositoryServerInfoException.java
==============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/provisional/wizards/RepositoryServerInfo.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/MultiPullResultDialog.java
=====================================================================================



Line No: 314 ------->
Mystry Guest smell found
 [Lines Optional[(line 270,col 45)] - Optional[(line 346,col 2)] ] 

{
    if (buttonId == DETAIL_BUTTON) {
        final Shell shell = getShell();
        Rectangle trim = shell.computeTrim(0, 0, 0, 0);
        int xOffset = 0;
        int xDelta = -trim.x + 3;
        int yOffset = 0;
        int yDelta = -trim.y - 3;
        final LinkedList<PullResultDialog> dialogs = new LinkedList<>();
        IStructuredSelection sel = (IStructuredSelection) tv.getSelection();
        for (Object obj : sel.toList()) {
            @SuppressWarnings("unchecked") Entry<Repository, Object> item = (Entry<Repository, Object>) obj;
            if (item.getValue() instanceof PullResult) {
                final int x = xOffset;
                final int y = yOffset;
                xOffset += xDelta;
                yOffset += yDelta;
                final PullResultDialog dialog = new PullResultDialog(shell, item.getKey(), (PullResult) item.getValue()) {

                    private Point initialLocation;

                    @Override
                    protected Point getInitialLocation(Point initialSize) {
                        initialLocation = super.getInitialLocation(initialSize);
                        initialLocation.x += x;
                        initialLocation.y += y;
                        return initialLocation;
                    }

                    @Override
                    public boolean close() {
                        // restore shell location if we moved it:
                        Shell resultShell = getShell();
                        if (resultShell != null && !resultShell.isDisposed()) {
                            Point location = resultShell.getLocation();
                            if (location.equals(initialLocation)) {
                                resultShell.setVisible(false);
                                resultShell.setLocation(location.x - x, location.y - y);
                            }
                        }
                        boolean result = super.close();
                        // activate next result dialog (not the multi-result dialog):
                        // TODO: This doesn't work due to https://bugs.eclipse.org/388667 :
                        // Shell[] subShells = shell.getShells();
                        // if (subShells.length > 0) {
                        // subShells[subShells.length - 1].setActive();
                        // }
                        dialogs.remove(this);
                        if (dialogs.size() > 0)
                            dialogs.getLast().getShell().setActive();
                        return result;
                    }
                };
                dialog.create();
                dialog.getShell().addShellListener(new ShellAdapter() {

                    @Override
                    public void shellActivated(org.eclipse.swt.events.ShellEvent e) {
                        dialogs.remove(dialog);
                        dialogs.add(dialog);
                    }
                });
                dialog.open();
            }
        }
    }
    super.buttonPressed(buttonId);
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullResultDialog.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullWizard.java
==========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullWizardPage.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/AddRemotePage.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/AddRemoteWizard.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/ConfirmationPage.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushBranchPage.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushBranchWizard.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushJob.java
=======================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushMode.java
========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushOperationUI.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushResultDialog.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushResultTable.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushTagsPage.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushTagsWizard.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushToGerritPage.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushToGerritWizard.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushWizard.java
==========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/PushWizardDialog.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/RefSpecDialog.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/RefSpecWizard.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/RefUpdateContentProvider.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/RefUpdateElement.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/ShowPushResultAction.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/push/SimpleConfigurePushDialog.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/CommitMessageEditorDialog.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/PlanContextMenuAction.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractiveDragSourceListener.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractiveDropTargetListener.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractiveHandler.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractivePlanContentProvider.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractivePreferences.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractiveStepActionToolBarProvider.java
============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseInteractiveView.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/rebase/RebaseResultDialog.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/command/AbstractReflogCommandHandler.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/command/CheckoutHandler.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/command/CopyHandler.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/command/OpenInCommitViewerHandler.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/command/ResetHandler.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/ReflogItem.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/ReflogView.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/ReflogViewContentProvider.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/reflog/RefSelectionDialog.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/BranchPropertySource.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/CreateBranchPage.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/CreateBranchWizard.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/CreateRepositoryPage.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/DropAdapterAssistant.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/NewRepositoryWizard.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoriesView.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoriesViewActionProvider.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoriesViewContentProvider.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoriesViewExtensionFactory.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryDragAssistant.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryPropertyPage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryPropertySource.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryPropertySourceProvider.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryRemotePropertySource.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositorySearchDialog.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositorySearchWizard.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryStatisticsPage.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryTreeNodeDecorator.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryTreeNodeLabelProvider.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoryTreeNodeWorkbenchAdapter.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/SelectResetTypePage.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/SelectUriWizard.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/AdditionalRefNode.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/AdditionalRefsNode.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/BranchesNode.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/BranchHierarchyNode.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/AbstractToggleCommand.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/AddCommand.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/AddToIndexCommand.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ChangeCredentialsCommand.java
===========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/CheckoutCommand.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ClearCredentialsCommand.java
==========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/CloneCommand.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ConfigureBranchCommand.java
=========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ConfigureFetchCommand.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ConfigureGerritRemoteCommand.java
===============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ConfigurePushCommand.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ConfigureRemoteCommand.java
=========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/CopyPathCommand.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/CreateBranchCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/CreateRepositoryCommand.java
==========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteBranchCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteCommand.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteFetchCommand.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteFileCommand.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeletePushCommand.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteRepositoryConfirmDialog.java
================================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/DeleteTagCommand.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/FetchCommand.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/FetchConfiguredRemoteCommand.java
===============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/GarbageCollectCommand.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ImportProjectsCommand.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/InstallLfsLocalCommand.java
=========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/MergeCommand.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/OpenCommand.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/OpenInEditorCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/PasteCommand.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/PushCommand.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/PushConfiguredRemoteCommand.java
==============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RefreshCommand.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RemoveCommand.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RemoveOrDeleteRepositoryCommand.java
==================================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RemoveRemoteCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RenameBranchCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/RepositoriesViewCommandHandler.java
=================================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ResetCommand.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/StashDropCommand.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/SubmoduleAddCommand.java
======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/SubmoduleCommand.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/SubmoduleSyncCommand.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/SubmoduleUpdateCommand.java
=========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/SynchronizeCommand.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ToggleBranchCommitCommand.java
============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ToggleBranchHierarchyCommand.java
===============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/command/ToggleLinkWithSelectionCommand.java
=================================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/ErrorNode.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/FetchNode.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/FileNode.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/filter/NodeByTypeFilter.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/filter/NodeFilterFactory.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/FolderNode.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/LocalNode.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/PushNode.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RefNode.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RemoteNode.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RemotesNode.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RemoteTrackingNode.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RepositoriesViewPropertyTester.java
=========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RepositoriesViewSorter.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RepositoryNode.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RepositoryTreeNode.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/RepositoryTreeNodeType.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/StashedCommitNode.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/StashNode.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/SubmodulesNode.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/TagNode.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/TagsNode.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/tree/WorkingDirNode.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/RepositoryCacheRule.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/RepositorySaveableFilter.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/ResourcePropertyTester.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/resources/IResourceState.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/resources/ResourceState.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/resources/ResourceStateFactory.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/resources/ResourceStatePropertyTester.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/EditableRevision.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/FileRevisionEditorInput.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/FileRevisionTypedElement.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/GitCompareFileRevisionEditorInput.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/LocationEditableRevision.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/NotifiableDiffNode.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/ResourceEditableRevision.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/revision/StorageTypedElement.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/SaveFilter.java
=====================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitMatch.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitResultLabelProvider.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitSearchPage.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitSearchQuery.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitSearchResult.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitSearchResultsPage.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/CommitSearchSettings.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/OpenCommitSearchPageAction.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/PatternUtils.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/search/RepositoryMatch.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/SecureStoreUtils.java
===========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/AbstractSelectionProvider.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/MultiViewerSelectionProvider.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositorySelectionProvider.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositorySourceProvider.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryVirtualNode.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/SelectionPropertyTester.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/SelectionUtils.java
===================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/sharing/ExistingOrNewPage.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/sharing/MoveProjectsLabelProvider.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/sharing/RepoComboContentProvider.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/sharing/RepoComboLabelProvider.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/sharing/SharingWizard.java
================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/FixedJFaceToolTip.java
====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingEntry.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingEntryAdapterFactory.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingFolderEntry.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingView.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingViewContentProvider.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingViewLabelProvider.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingViewTooltips.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/ToggleableLabel.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/stash/StashCreateUI.java
==============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/submodule/AddSubmoduleWizard.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/submodule/SubmodulePathWizardPage.java
============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/SWTUtils.java
===================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/action/ExpandAllModelAction.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/action/GitOpenInCompareAction.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/action/OpenWorkingFileAction.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/action/PullAction.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/action/PushAction.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/compare/ComparisonDataSource.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/compare/GitCacheCompareInput.java
===================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/compare/GitCompareInput.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/compare/LocalNonWorkspaceTypedElement.java
============================================================================================================



Line No: 250 ------->
Mystry Guest smell found
 [Lines Optional[(line 231,col 68)] - Optional[(line 275,col 2)] ] 

{
    if (isDirty()) {
        if (isConnected()) {
            super.commit(monitor);
        } else {
            File file = path.toFile();
            try {
                byte[] contents = getContent();
                if (isSymlink) {
                    String sp = new String(contents, StandardCharsets.UTF_8).trim();
                    if (sp.indexOf('\n') > 0) {
                        sp = sp.substring(0, sp.indexOf('\n')).trim();
                    }
                    if (!sp.isEmpty()) {
                        boolean wasBrokenLink = !file.exists();
                        java.nio.file.Path link = FileUtils.createSymLink(file, sp);
                        // If link state changes, Eclipse can't realize this
                        // https://bugs.eclipse.org/bugs/show_bug.cgi?id=290318
                        updateLinkResource(wasBrokenLink, link);
                    }
                } else {
                    try (OutputStream out = Files.newOutputStream(file.toPath())) {
                        out.write(contents);
                    }
                }
                fDirty = false;
            } catch (IOException e) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.getPluginId(), UIText.LocalNonWorkspaceTypedElement_errorWritingContents, e));
            } finally {
                fireContentChanged();
                updateGitState();
            }
        }
        refreshTimestamp();
    }
}

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/DefaultGitSynchronizer.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitActionContributor.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitChangeSetModelProvider.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitModelSynchronize.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitModelSynchronizeParticipant.java
=====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitSynchronizer.java
======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitSynchronizeWizard.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitSynchronizeWizardPage.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/GitTreeCompareNavigator.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitBlobMapping.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitChangeSetContentProvider.java
==========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitChangeSetDropAdapterAssistant.java
===============================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitChangeSetLabelProvider.java
========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitChangeSetSorter.java
=================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitContainerMapping.java
==================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitModelWorkbenchAdapter.java
=======================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitObjectMapping.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitTreeMapping.java
=============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitTreeTraversal.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelBlob.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCache.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCacheFile.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCacheTree.java
==============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCommit.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelObject.java
===========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelObjectContainer.java
====================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelRepository.java
===============================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelRoot.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelTree.java
=========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelWorkingFile.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelWorkingTree.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/HasProjects.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/SupportedContextActionsHelper.java
==========================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/model/TreeBuilder.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareGitSynchronizer.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/SynchronizeFetchJob.java
==========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/SyncRepoEntity.java
=====================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/trace/GitTraceLocation.java
=================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/trace/ITraceLocation.java
===============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/TreeColumnPatternFilter.java
==================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/UIIcons.java
==================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/UIRepositoryUtils.java
============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/UIText.java
=================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/ValidationUtils.java
==========================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/variables/GitTemplateVariableResolver.java
================================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/variables/GitVariableResolver.java
========================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/WorkbenchStyledLabelProvider.java
=======================================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/JobFamilies.java
=============================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/PluginPreferenceInitializer.java
=============================================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/UIPreferences.java
===============================================================

/org.eclipse.egit.ui/src/org/eclipse/egit/ui/UIUtils.java
=========================================================



Line No: 312 ------->
Mystry Guest smell found
 [Lines Optional[(line 309,col 72)] - Optional[(line 315,col 2)] ] 

{
    // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=71765
    Text text = new Text(parent, style | SWT.READ_ONLY);
    text.setBackground(text.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
    return text;
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/CommitDialogTester.java
================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/CompareEditorTester.java
=================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/CreatePatchWizard.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/EGitTestCase.java
==========================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/ExistingOrNewPage.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/GitImportRepoWizard.java
=================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/JavaProjectTester.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/LocalRepositoryTestCase.java
=====================================================================================



Line No: 500 


Line No: 503 


Line No: 506 


Line No: 508 


Line No: 512 ------->
Mystry Guest smell found
 [Lines Optional[(line 489,col 21)] - Optional[(line 548,col 2)] ] 

{
    Repository myRepository = lookupRepository(repositoryDir);
    File gitDir = new File(testDirectory, REPO2);
    Repository myRemoteRepository = FileRepositoryBuilder.create(gitDir);
    myRemoteRepository.create(true);
    // double-check that this is bare
    assertTrue(myRemoteRepository.isBare());
    createStableBranch(myRepository);
    // now we configure a pure push destination
    myRepository.getConfig().setString("remote", "push", "pushurl", "file:///" + myRemoteRepository.getDirectory().getPath());
    myRepository.getConfig().setString("remote", "push", "push", "+refs/heads/*:refs/heads/*");
    // and a pure fetch destination
    myRepository.getConfig().setString("remote", "fetch", "url", "file:///" + myRemoteRepository.getDirectory().getPath());
    myRepository.getConfig().setString("remote", "fetch", "fetch", "+refs/heads/*:refs/heads/*");
    // a destination with both fetch and push urls and specs
    myRepository.getConfig().setString("remote", "both", "pushurl", "file:///" + myRemoteRepository.getDirectory().getPath());
    myRepository.getConfig().setString("remote", "both", "push", "+refs/heads/*:refs/heads/*");
    myRepository.getConfig().setString("remote", "both", "url", "file:///" + myRemoteRepository.getDirectory().getPath());
    myRepository.getConfig().setString("remote", "both", "fetch", "+refs/heads/*:refs/heads/*");
    // a destination with only a fetch url and push and fetch specs
    myRepository.getConfig().setString("remote", "mixed", "push", "+refs/heads/*:refs/heads/*");
    myRepository.getConfig().setString("remote", "mixed", "url", "file:///" + myRemoteRepository.getDirectory().getPath());
    myRepository.getConfig().setString("remote", "mixed", "fetch", "+refs/heads/*:refs/heads/*");
    myRepository.getConfig().save();
    // and push
    PushOperationUI pa = new PushOperationUI(myRepository, "push", false);
    pa.execute(null);
    try {
        // delete the stable branch again
        RefUpdate op = myRepository.updateRef("refs/heads/stable");
        // $NON-NLS-1$
        op.setRefLogMessage(// $NON-NLS-1$
        "branch deleted", false);
        // we set the force update in order
        // to avoid having this rejected
        // due to minor issues
        op.setForceUpdate(true);
        op.delete();
    } catch (IOException ioe) {
        throw new InvocationTargetException(ioe);
    }
    return myRemoteRepository.getDirectory();
}



Line No: 555 ------->
Mystry Guest smell found
 [Lines Optional[(line 551,col 21)] - Optional[(line 559,col 2)] ] 

{
    Repository myRepository = lookupRepository(repositoryDir);
    URIish uri = new URIish("file:///" + myRepository.getDirectory());
    File workdir = new File(testDirectory, CHILDREPO);
    CloneOperation clop = new CloneOperation(uri, true, null, workdir, "refs/heads/master", "origin", 0);
    clop.run(null);
    return new File(workdir, Constants.DOT_GIT);
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/LoginDialogTester.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/PushResultDialogTester.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/PushWizardTester.java
==============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/RefSpecPageTester.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/RepoPropertiesPage.java
================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/RepoRemoteBranchesPage.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/SharingWizard.java
===========================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/StagingViewTester.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/common/WorkingCopyPage.java
=============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/AbstractFeatureFinishHandlerTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/AbstractGitflowHandlerTest.java
=========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/CommandEnablementTest.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/FeatureFinishKeepBranchHandlerTest.java
=================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/FeatureFinishSquashHandlerTest.java
=============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/FeatureRebaseHandlerTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/FeatureStartCheckoutConflictTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/FeatureStartFinishHandlerTest.java
============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/gitflow/InitHandlerTest.java
==============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/httpauth/PushTest.java
========================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/actions/LinkedResourcesTest.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/actions/StashesMenuTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/actions/SwitchToMenuTest.java
========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/branch/BranchProjectTrackerTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/clone/SmartImportWizardTest.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/CommonUtilsTest.java
===============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/CompareUtilsTest.java
================================================================================



Line No: 147 


Line No: 149 


Line No: 160 


Line No: 161 


Line No: 183 


Line No: 184 ------->
Mystry Guest smell found
 [Lines Optional[(line 139,col 61)] - Optional[(line 192,col 2)] ] 

{
    IFile testFile = touch("a");
    stage(testFile);
    // Set up .gitattributes such that 'a's are changed to 'x' on smudge
    IFile gitAttributes = touch(PROJ1, FOLDER + "/.gitattributes", FILE1 + " filter=test");
    try {
        FilterCommandRegistry.register("egitui://builtin/test/smudge", new TestCommandFactory('a', 'x'));
        StoredConfig config = repository.getConfig();
        config.setString("filter", "test", "smudge", "egitui://builtin/test/smudge");
        config.save();
        // Get the index file revision.
        ITypedElement element = CompareUtils.getIndexTypedElement(testFile);
        assert (element instanceof EditableRevision);
        EditableRevision revision = (EditableRevision) element;
        // Check that its contents are 'x'.
        try (InputStream in = revision.getContents()) {
            assertEquals("x", get(in));
        }
        // Modify the filter to transform 'x' to 'a' on clean
        FilterCommandRegistry.register("egitui://builtin/test/clean", new TestCommandFactory('x', 'a'));
        config.setString("filter", "test", "clean", "egitui://builtin/test/clean");
        config.save();
        // Change the contents to 'xx'. This should apply the above clean
        // filter.
        revision.setContent("xx".getBytes(StandardCharsets.UTF_8));
        // Commit the index
        CommitOperation op = new CommitOperation(repository, TestUtil.TESTAUTHOR, TestUtil.TESTCOMMITTER, "Commit modified index");
        op.execute(null);
        TestUtil.waitForJobs(50, 5000);
        // Remove filters
        gitAttributes.delete(true, true, new NullProgressMonitor());
        config.unsetSection("filter", "test");
        config.save();
        // Do a reset --hard
        ResetOperation reset = new ResetOperation(repository, Constants.HEAD, ResetType.HARD);
        reset.execute(null);
        TestUtil.waitForJobs(50, 5000);
        // Should have 'aa' now since we never committed the .gitattributes
        try (InputStream in = testFile.getContents()) {
            assertEquals("aa", get(in));
        }
    } finally {
        FilterCommandRegistry.unregister("egitui://builtin/test/smudge");
        FilterCommandRegistry.unregister("egitui://builtin/test/clean");
    }
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceAdapterTest.java
=========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/DecoratableResourceMappingTest.java
=========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/DecoratableWorkingSetTest.java
====================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/GitLightweightDecoratorTest.java
======================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/TestDecoratableResource.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/decorators/TestResourceMapping.java
==============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageBuilderTest.java
================================================================================================



Line No: 424 ------->
Mystry Guest smell found
 [Lines Optional[(line 421,col 44)] - Optional[(line 432,col 2)] ] 

{
    // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=349164
    return new CommitMessageBuilder(testRepository.getRepository(), Collections.emptyList()) {

        @Override
        List<ICommitMessageProvider> getCommitMessageProviders() {
            return providers;
        }
    };
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/dialogs/CommitMessageComponentTest.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/dialogs/HyperlinkTokenScannerTest.java
=================================================================================================



Line No: 73 ------->
Mystry Guest smell found
 [Lines Optional[(line 70,col 41)] - Optional[(line 74,col 2)] ] 

{
    String testString = "http://foo bar";
    String expected = "HHHHHHHHHHDDDD";
    assertTokens(testString, 0, testString.length(), expected);
}



Line No: 80 ------->
Mystry Guest smell found
 [Lines Optional[(line 77,col 42)] - Optional[(line 81,col 2)] ] 

{
    String testString = "Link: http://foo bar";
    String expected = "DDDDDDHHHHHHHHHHDDDD";
    assertTokens(testString, 0, testString.length(), expected);
}



Line No: 87 ------->
Mystry Guest smell found
 [Lines Optional[(line 84,col 49)] - Optional[(line 88,col 2)] ] 

{
    String testString = "Link: http://foo http://www.example.com bar";
    String expected = "DDDDDDHHHHHHHHHHDHHHHHHHHHHHHHHHHHHHHHHDDDD";
    assertTokens(testString, 0, testString.length(), expected);
}



Line No: 94 ------->
Mystry Guest smell found
 [Lines Optional[(line 91,col 52)] - Optional[(line 95,col 2)] ] 

{
    String testString = "Link: http://foo\n\n* http://foo\n* ftp://somewhere\n\nTwo links above.";
    String expected = "DDDDDDHHHHHHHHHHDDDDHHHHHHHHHHDDDHHHHHHHHHHHHHHHDDDDDDDDDDDDDDDDDD";
    assertTokens(testString, 0, testString.length(), expected);
}



Line No: 101 ------->
Mystry Guest smell found
 [Lines Optional[(line 98,col 48)] - Optional[(line 104,col 2)] ] 

{
    String testString = "Link: http://foo\n\n* http://foo\n* ftp://somewhere\n\nTwo links above.";
    String expected = "DDDDD                                                             ";
    assertTokens(testString, 0, 5, expected);
    expected = "                                                  DDDDDDDDDDDD    ";
    assertTokens(testString, 50, 12, expected);
}



Line No: 110 ------->
Mystry Guest smell found
 [Lines Optional[(line 107,col 46)] - Optional[(line 113,col 2)] ] 

{
    String testString = "Link: http://foo\n\n* http://foo\n* ftp://somewhere\n\nTwo links above.";
    String expected = "DDDDDDHHHHHHHH                                                    ";
    assertTokens(testString, 0, 14, expected);
    expected = "               HDDDDHHHHHHHHH                                     ";
    assertTokens(testString, 15, 14, expected);
}



Line No: 119 ------->
Mystry Guest smell found
 [Lines Optional[(line 116,col 44)] - Optional[(line 126,col 2)] ] 

{
    String testString = "Link: http://foo bar";
    String expected = "DDDDDDHHHHHHHHHHDDDD";
    assertTokens(testString, 0, testString.length(), detectorsWithFailure, expected);
    // With only a failing detector
    expected = "DDDDDDDDDDDDDDDDDDDD";
    assertTokens(testString, 0, testString.length(), new IHyperlinkDetector[] { new CrashingHyperlinkDetector() }, expected);
}



Line No: 132 ------->
Mystry Guest smell found
 [Lines Optional[(line 129,col 41)] - Optional[(line 134,col 2)] ] 

{
    String testString = "Link: http://foo bar";
    String expected = "DDDDDDDDDDDDDDDDDDDD";
    assertTokens(testString, 0, testString.length(), new IHyperlinkDetector[] {}, expected);
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/dialogs/SpellcheckableMessageAreaTest.java
=====================================================================================================



Line No: 237 


Line No: 237 


Line No: 237 


Line No: 238 


Line No: 238 


Line No: 238 ------->
Mystry Guest smell found
 [Lines Optional[(line 234,col 38)] - Optional[(line 263,col 2)] ] 

{
    String input = "A commit message with long words\n\n" + "123456789 123456789 123456789 123456789 123456789 123456789 A_single_rather_long_word_that_exceeds_the_margin\n" + "More text with normal short words on a single line fitting the margin.\n" + "Even more text with normal short words on a single line exceeding the margin.\n\n" + "[1] https://foo.example.org/with/a/very/long/url/that/should/remain/on/this/line/\n" + " * https://foo.example.org/with/a/very/long/url/that/should/also/remain/on/this/line/\n" + " * ** https://foo.example.org/with/a/very/long/url/that/should/also/remain/on/this/line/\n" + "                                                this_long_word_also_should_remain_here, but this should be a new line\n" + "     *                                          but_this_long_word_should_be_wrapped, and this should follow\n\n" + "Change-Id: I0000000000000000000000000000000000000000\n" + "Signed-off-by: Some-Arguablylong Name <somearguablylong.name@somecompany.com>";
    String expected = "A commit message with long words\n\n" + "123456789 123456789 123456789 123456789 123456789 123456789\n" + "A_single_rather_long_word_that_exceeds_the_margin\n" + "More text with normal short words on a single line fitting the margin.\n" + "Even more text with normal short words on a single line exceeding the\n" + "margin.\n\n" + "[1] https://foo.example.org/with/a/very/long/url/that/should/remain/on/this/line/\n" + " * https://foo.example.org/with/a/very/long/url/that/should/also/remain/on/this/line/\n" + " * ** https://foo.example.org/with/a/very/long/url/that/should/also/remain/on/this/line/\n" + "                                                this_long_word_also_should_remain_here,\n" + "but this should be a new line\n" + // Trailing blanks stripped!
    "     *\n" + "but_this_long_word_should_be_wrapped, and this should follow\n\n" + "Change-Id: I0000000000000000000000000000000000000000\n" + "Signed-off-by: Some-Arguablylong Name <somearguablylong.name@somecompany.com>";
    assertEquals(expected, SpellcheckableMessageArea.wrapCommitMessage(input));
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/fetch/FetchGerritChangeTest.java
===========================================================================================



Line No: 60 


Line No: 61 ------->
Mystry Guest smell found
 [Lines Optional[(line 57,col 44)] - Optional[(line 62,col 2)] ] 

{
    assertNull(FetchGerritChangePage.determineChangeFromString("http://www.example.org/foo/bar"));
    assertNull(FetchGerritChangePage.determineChangeFromString("https://git example.org/r/#/c/65510/"));
}



Line No: 74 


Line No: 75 


Line No: 76 


Line No: 77 


Line No: 78 


Line No: 79 


Line No: 80 


Line No: 81 


Line No: 82 ------->
Mystry Guest smell found
 [Lines Optional[(line 71,col 36)] - Optional[(line 99,col 2)] ] 

{
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510"));
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/"));
    assertEquals(Change.create(65510, 6), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/6"));
    assertEquals(Change.create(65510, 6), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/6/"));
    assertEquals(Change.create(65510, 6), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/6/some.path/some/File.txt"));
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/4..5"));
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/4..5/"));
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org/r/#/c/65510/4..5/some.path/some/File.txt"));
    assertEquals(Change.create(65510), FetchGerritChangePage.determineChangeFromString("https://git.example.org:8080/r/#/c/65510"));
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/push/PushBranchWizardTest.java
=========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/push/PushBranchWizardTester.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/push/PushTagsWizardTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/push/PushTagsWizardTester.java
=========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/push/PushToUpstreamTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/selection/SelectionForViewsTest.java
===============================================================================================



Line No: 96 ------->
Mystry Guest smell found
 [Lines Optional[(line 91,col 40)] - Optional[(line 135,col 2)] ] 

{
    localRepositoryDir = createProjectAndCommitToRepository();
    remoteRepositoryDir = createRemoteRepository(localRepositoryDir);
    URIish uri = new URIish("file:///" + remoteRepositoryDir.getPath());
    File workdir = new File(getTestDirectory(), "ClonedRepo");
    CloneOperation op = new CloneOperation(uri, true, null, workdir, "refs/heads/master", "origin", 0);
    op.run(null);
    clonedRepositoryDir = new File(workdir, Constants.DOT_GIT);
    RepositoryUtil repoUtil = Activator.getDefault().getRepositoryUtil();
    repoUtil.addConfiguredRepository(localRepositoryDir);
    repoUtil.addConfiguredRepository(clonedRepositoryDir);
    // it's bare
    repoUtil.addConfiguredRepository(remoteRepositoryDir);
    ICommandService srv = CommonUtils.getService(PlatformUI.getWorkbench(), ICommandService.class);
    linkWithSelectionState = srv.getCommand(ToggleLinkWithSelectionCommand.ID).getState(RegistryToggleState.STATE_ID);
    initialLinkingWithSelection = (Boolean) linkWithSelectionState.getValue();
    linkWithSelectionState.setValue(Boolean.TRUE);
    stagingView = TestUtil.showView(StagingView.VIEW_ID);
    reflogView = TestUtil.showView(ReflogView.VIEW_ID);
    rebaseInteractiveView = TestUtil.showView(RebaseInteractiveView.VIEW_ID);
    repoView = TestUtil.showView(RepositoriesView.VIEW_ID);
    historyView = TestUtil.showHistoryView();
    IHistoryView history = (IHistoryView) historyView.getViewReference().getView(false);
    ((GenericHistoryView) history).setLinkingEnabled(true);
    // Ensure that the git history page is active
    Exception[] exception = { null };
    PlatformUI.getWorkbench().getDisplay().syncExec(() -> {
        try {
            history.showHistoryFor(new RepositoryNode(null, lookupRepository(localRepositoryDir)), true);
        } catch (Exception e) {
            exception[0] = e;
        }
    });
    if (exception[0] != null) {
        throw exception[0];
    }
    waitForRefreshes();
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/selection/SelectionUtilsTest.java
============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/submodules/SubmoduleFolderTest.java
==============================================================================================



Line No: 324 ------->
Mystry Guest smell found
 [Lines Optional[(line 321,col 66)] - Optional[(line 353,col 2)] ] 

{
    // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=446344#c11
    // If the compare editor's title does not contain the HEAD id of
    // the subrepo, then either no compare editor got opened, or
    // it was opened using the parent repo.
    IFolder childProjectFolder = childFolder.getFolder(CHILDPROJECT);
    IFolder folder = childProjectFolder.getFolder(FOLDER);
    IFile file = folder.getFile(FILE1);
    touch(PROJ1, file.getProjectRelativePath().toOSString(), "Modified");
    SWTBotTree projectExplorerTree = TestUtil.getExplorerTree();
    SWTBotTreeItem node = TestUtil.navigateTo(projectExplorerTree, file.getFullPath().segments());
    node.select();
    Ref headRef = subRepository.findRef(Constants.HEAD);
    final String headId = Utils.getShortObjectId(headRef.getObjectId());
    ContextMenuHelper.clickContextMenuSync(projectExplorerTree, "Compare With", util.getPluginLocalizedValue("CompareWithHeadAction_label"));
    bot.waitUntil(waitForEditor(new BaseMatcher<IEditorReference>() {

        @Override
        public boolean matches(Object item) {
            return (item instanceof IEditorReference) && ((IEditorReference) item).getTitle().contains(headId);
        }

        @Override
        public void describeTo(Description description) {
            description.appendText("Wait for editor containing " + headId);
        }
    }), 5000);
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/mapping/GitChangeSetSorterTest.java
==========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelBlobTest.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCacheFileTest.java
=======================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCacheTest.java
===================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCacheTreeTest.java
=======================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelCommitTest.java
====================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelRepositoryTest.java
========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelRootTest.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelTestCase.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelTreeTest.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelWorkingFileTest.java
=========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/internal/synchronize/model/GitModelWorkingTreeTest.java
=========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/operations/GitScopeUtilTest.java
==================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/prefpages/configuration/GlobalConfigurationPageTest.java
==========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/search/CommitSearchDialogTest.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/search/CommitSearchQueryTest.java
===================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/submodule/SubmoduleAddTest.java
=================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/submodule/SubmoduleSyncTest.java
==================================================================================



Line No: 75 ------->
Mystry Guest smell found
 [Lines Optional[(line 55,col 47)] - Optional[(line 120,col 2)] ] 

{
    deleteAllProjects();
    assertProjectExistence(PROJ1, false);
    clearView();
    Activator.getDefault().getRepositoryUtil().addConfiguredRepository(repositoryFile);
    shareProjects(repositoryFile);
    assertProjectExistence(PROJ1, true);
    refreshAndWait();
    assertHasRepo(repositoryFile);
    Repository repo = lookupRepository(repositoryFile);
    SubmoduleAddCommand command = new SubmoduleAddCommand(repo);
    String path = "sub";
    command.setPath(path);
    String uri = new URIish(repo.getDirectory().toURI().toString()).toString();
    command.setURI(uri);
    Repository subRepo = command.call();
    assertNotNull(subRepo);
    subRepo.close();
    String newUri = "git://server/repo.git";
    File modulesFile = new File(repo.getWorkTree(), Constants.DOT_GIT_MODULES);
    FileBasedConfig config = new FileBasedConfig(modulesFile, repo.getFS());
    config.load();
    config.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION, path, ConfigConstants.CONFIG_KEY_URL, newUri);
    config.save();
    assertEquals(uri, repo.getConfig().getString(ConfigConstants.CONFIG_SUBMODULE_SECTION, path, ConfigConstants.CONFIG_KEY_URL));
    assertEquals(uri, subRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, Constants.DEFAULT_REMOTE_NAME, ConfigConstants.CONFIG_KEY_URL));
    refreshAndWait();
    SWTBotTree tree = getOrOpenView().bot().tree();
    TestUtil.expandAndWait(tree.getAllItems()[0]).getNode(UIText.RepositoriesViewLabelProvider_SubmodulesNodeText).select();
    ContextMenuHelper.clickContextMenuSync(tree, myUtil.getPluginLocalizedValue(SYNC_SUBMODULE_CONTEXT_MENU_LABEL));
    TestUtil.joinJobs(JobFamilies.SUBMODULE_SYNC);
    refreshAndWait();
    assertEquals(newUri, repo.getConfig().getString(ConfigConstants.CONFIG_SUBMODULE_SECTION, path, ConfigConstants.CONFIG_KEY_URL));
    assertEquals(newUri, subRepo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION, Constants.DEFAULT_REMOTE_NAME, ConfigConstants.CONFIG_KEY_URL));
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/submodule/SubmoduleUpdateTest.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/CommitEditorInputFactoryTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/CommitEditorInputTest.java
========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/CommitEditorTest.java
===================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/DiffRegionFormatterTest.java
==========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/RepositoryCommitMatcher.java
==========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/RepositoryCommitTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/CommitMessageUtil.java
=============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/ContextMenuHelper.java
=============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/Eclipse.java
===================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/history/HistoryViewTest.java
===================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/JobJoiner.java
=====================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/StagingUtil.java
=======================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/stagview/AbstractStagingViewTestCase.java
================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/stagview/CommitMessageProvidersTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/stagview/StagingViewTest.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/stagview/TestCommitMessageProviderExtensionFactory.java
==============================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/SWTBotTreeColumn.java
============================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/BranchAndResetActionTest.java
=================================================================================================



Line No: 228 


Line No: 243 ------->
Mystry Guest smell found
 [Lines Optional[(line 182,col 60)] - Optional[(line 301,col 2)] ] 

{
    // we need to check if this file system has problems to
    // delete a file with an open FileInputStrem
    IFile test = ResourcesPlugin.getWorkspace().getRoot().getProject(PROJ1).getFolder(FOLDER).getFile("temp.txt");
    test.create(new ByteArrayInputStream(new byte[0]), false, null);
    File testFile = new File(test.getLocation().toString());
    assertTrue(testFile.exists());
    try (InputStream fis = Files.newInputStream(testFile.toPath())) {
        FileUtils.delete(testFile);
        return;
    } catch (IOException e) {
    // the test makes sense only if deletion of
    // a file with open stream fails
    } finally {
        if (testFile.exists()) {
            FileUtils.delete(testFile);
        }
    }
    final Image folderImage = PlatformUI.getWorkbench().getSharedImages().getImage(ISharedImages.IMG_OBJ_FOLDER);
    final Image projectImage = PlatformUI.getWorkbench().getSharedImages().getImage(SharedImages.IMG_OBJ_PROJECT);
    // checkout stable
    checkoutAndVerify(new String[] { LOCAL_BRANCHES, "stable" });
    // add a file
    IFile toBeDeleted = ResourcesPlugin.getWorkspace().getRoot().getProject(PROJ1).getFolder(FOLDER).getFile("ToBeDeleted");
    toBeDeleted.create(new ByteArrayInputStream(new byte[0]), false, null);
    ArrayList<IFile> untracked = new ArrayList<>();
    untracked.add(toBeDeleted);
    // commit to stable
    CommitOperation op = new CommitOperation(new IFile[] { toBeDeleted }, untracked, TestUtil.TESTAUTHOR, TestUtil.TESTCOMMITTER, "Add to stable");
    op.execute(null);
    try (InputStream is = toBeDeleted.getContents()) {
        checkout(new String[] { LOCAL_BRANCHES, "master" });
        final SWTBotShell showUndeleted = bot.shell(UIText.NonDeletedFilesDialog_NonDeletedFilesTitle);
        // repo relative path
        assertEquals("ToBeDeleted", showUndeleted.bot().tree().getAllItems()[0].getItems()[0].getItems()[0].getText());
        PlatformUI.getWorkbench().getDisplay().syncExec(new Runnable() {

            @Override
            public void run() {
                assertSame(folderImage, showUndeleted.bot().tree().getAllItems()[0].widget.getImage());
            }
        });
        SWTBotToolbarDropDownButton pathButton = showUndeleted.bot().toolbarDropDownButton();
        pathButton.menuItem(UIText.NonDeletedFilesTree_FileSystemPathsButton).click();
        // see http://www.eclipse.org/forums/index.php/t/159133/ why we need this
        pathButton.pressShortcut(KeyStroke.getInstance("ESC"));
        // fs path
        IPath path = new Path(lookupRepository(repositoryFile).getWorkTree().getPath()).append(PROJ1).append(FOLDER).append("ToBeDeleted");
        SWTBotTreeItem[] items = showUndeleted.bot().tree().getAllItems();
        for (int i = 0; i < path.segmentCount(); i++) {
            boolean found = false;
            String segment = path.segment(i);
            for (SWTBotTreeItem item : items) if (item.getText().equals(segment)) {
                found = true;
                items = item.getItems();
            }
            assertTrue(found);
        }
        pathButton.menuItem(UIText.NonDeletedFilesTree_ResourcePathsButton).click();
        // see http://www.eclipse.org/forums/index.php/t/159133/ why we need this
        pathButton.pressShortcut(KeyStroke.getInstance("ESC"));
        // resource path
        assertEquals("ToBeDeleted", showUndeleted.bot().tree().getAllItems()[0].getItems()[0].getItems()[0].getText());
        PlatformUI.getWorkbench().getDisplay().syncExec(new Runnable() {

            @Override
            public void run() {
                assertSame(projectImage, showUndeleted.bot().tree().getAllItems()[0].widget.getImage());
            }
        });
        ICondition treeEmpty = new ICondition() {

            @Override
            public boolean test() throws Exception {
                return showUndeleted.bot().tree().getAllItems().length == 0;
            }

            @Override
            public void init(SWTBot actBot) {
            // nothing
            }

            @Override
            public String getFailureMessage() {
                return "Not deleted";
            }
        };
        showUndeleted.bot().button(UIText.NonDeletedFilesDialog_RetryDeleteButton).click();
        try {
            showUndeleted.bot().waitUntil(treeEmpty, 1000, 100);
            fail("Should have failed");
        } catch (TimeoutException e) {
        // expected
        }
        is.close();
        showUndeleted.bot().button(UIText.NonDeletedFilesDialog_RetryDeleteButton).click();
        showUndeleted.bot().waitUntil(treeEmpty, 1000, 100);
        showUndeleted.close();
    }
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/CommitActionStagingViewTest.java
====================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/CommitActionTest.java
=========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/CommitNonWSChangesTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/CompareActionsTest.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/CreatePatchActionTest.java
==============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/DisconnectConnectTest.java
==============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/FetchAndMergeActionTest.java
================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/JavaCompareTest.java
========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/LocationPage.java
=====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/MergeToolTest.java
======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/OptionsPage.java
====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/PushActionTest.java
=======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/ReplaceActionsTest.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/ShowBlameActionHandlerTest.java
===================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/ShowInTest.java
===================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/StageUnstageActionTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/team/actions/TagActionTest.java
======================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/TestUtil.java
====================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/trace/TraceConfigurationDialogTest.java
==============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/variables/DynamicVariablesTest.java
=====================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewBranchHandlingTest.java
==============================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewFetchAndPushTest.java
============================================================================================================



Line No: 68 ------->
Mystry Guest smell found
 [Lines Optional[(line 62,col 40)] - Optional[(line 87,col 2)] ] 

{
    repositoryFile = createProjectAndCommitToRepository();
    remoteRepositoryFile = createRemoteRepository(repositoryFile);
    // now let's clone the remote repository
    URIish uri = new URIish("file:///" + remoteRepositoryFile.getPath());
    File workdir = new File(getTestDirectory(), "ClonedRepo");
    CloneOperation op = new CloneOperation(uri, true, null, workdir, "refs/heads/master", "origin", 0);
    op.run(null);
    clonedRepositoryFile = new File(workdir, Constants.DOT_GIT);
    // now let's clone the remote repository
    uri = new URIish(remoteRepositoryFile.getPath());
    workdir = new File(getTestDirectory(), "RepoClone2");
    op = new CloneOperation(uri, true, null, workdir, "refs/heads/master", "origin", 0);
    op.run(null);
    clonedRepositoryFile2 = new File(workdir, Constants.DOT_GIT);
    clearView();
    deleteAllProjects();
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewRemoteHandlingTest.java
==============================================================================================================



Line No: 81 ------->
Mystry Guest smell found
 [Lines Optional[(line 72,col 55)] - Optional[(line 124,col 2)] ] 

{
    removeRemotesConfig(repositoryFile);
    refreshAndWait();
    SWTBotTree tree = getOrOpenView().bot().tree();
    SWTBotTreeItem remotesItem = myRepoViewUtil.getRemotesItem(tree, repositoryFile).expand();
    assertEquals("Wrong number of remotes", 0, remotesItem.getNodes().size());
    StoredConfig cfg = lookupRepository(repositoryFile).getConfig();
    String remoteUri = "file:///" + remoteRepositoryFile.getPath();
    cfg.setString("remote", "test1", "url", remoteUri);
    cfg.setString("remote", "test1", "fetch", "somejunk");
    cfg.setString("remote", "test2", "url", remoteUri);
    cfg.setString("remote", "test2", "fetch", "somejunk");
    cfg.setString("remote", "test2", "pushurl", remoteUri);
    cfg.setString("remote", "test2", "push", "somejunk");
    cfg.setString("remote", "test3", "pushurl", "somejunk");
    cfg.setString("remote", "test3", "push", "somejunk");
    cfg.save();
    cfg.load();
    refreshAndWait();
    remotesItem = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    assertEquals("Wrong number of remotes", 3, remotesItem.getNodes().size());
    List<String> testnodes = TestUtil.expandAndWait(remotesItem.getNode("test1")).getNodes();
    assertEquals(2, testnodes.size());
    List<String> test2nodes = TestUtil.expandAndWait(remotesItem.getNode("test2")).getNodes();
    assertEquals(2, test2nodes.size());
    // error node should be shown
    assertEquals(1, TestUtil.expandAndWait(remotesItem.getNode("test3")).getNodes().size());
    // test the properties view on remote
    remotesItem.getNode("test1").select();
    ContextMenuHelper.clickContextMenuSync(tree, myUtil.getPluginLocalizedValue("ShowIn"), "Properties");
    waitInUI();
    assertEquals("org.eclipse.ui.views.PropertySheet", bot.activeView().getReference().getId());
    removeRemotesConfig(repositoryFile);
    refreshAndWait();
    remotesItem = myRepoViewUtil.getRemotesItem(tree, repositoryFile).expand();
    assertEquals("Wrong number of remotes", 0, remotesItem.getNodes().size());
}



Line No: 151 


Line No: 223 


Line No: 260 ------->
Mystry Guest smell found
 [Lines Optional[(line 132,col 53)] - Optional[(line 370,col 2)] ] 

{
    removeRemotesConfig(repositoryFile);
    refreshAndWait();
    SWTBotTree tree = getOrOpenView().bot().tree();
    SWTBotTreeItem remotesItem = myRepoViewUtil.getRemotesItem(tree, repositoryFile);
    remotesItem.select();
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("NewRemoteCommand"));
    SWTBotShell shell = bot.shell(UIText.NewRemoteDialog_WindowTitle);
    shell.bot().textWithLabel(UIText.NewRemoteDialog_NameLabel).setText("testRemote");
    // configure fetch first
    shell.bot().radio(UIText.NewRemoteDialog_FetchRadio).click();
    shell.bot().button(UIText.NewRemoteDialog_ButtonOK).click();
    // configure fetch dialog
    shell = bot.shell(UIText.SimpleConfigureFetchDialog_WindowTitle);
    // change uri
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_ChangeUriLabel).click();
    shell = bot.shell(UIText.SelectUriWizard_Title);
    shell.bot().text().setText("file:///" + remoteRepositoryFile.getPath());
    shell.bot().button(IDialogConstants.FINISH_LABEL).click();
    // now we have the fetch URI
    // back to dialog
    shell = bot.shell(UIText.SimpleConfigureFetchDialog_WindowTitle);
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_AddRefSpecLabel).click();
    shell = bot.shell(UIText.SimpleFetchRefSpecWizard_WizardTitle);
    shell.bot().textWithLabel(UIText.FetchSourcePage_SourceLabel).setText("refs/heads/*");
    shell.bot().button(IDialogConstants.NEXT_LABEL).click();
    shell.bot().textWithLabel(UIText.FetchDestinationPage_DestinationLabel).setText("refs/remotes/testRemote/*");
    shell.bot().button(IDialogConstants.FINISH_LABEL).click();
    // back to dialog
    shell = bot.shell(UIText.SimpleConfigureFetchDialog_WindowTitle);
    // save
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_SaveButton).click();
    refreshAndWait();
    // assert children (push is shown also if there's only a fetch URI)
    SWTBotTreeItem item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    List<String> children = item.getNodes();
    assertEquals(2, children.size());
    item.select();
    // now we add push
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("ConfigurePushCommand"));
    shell = bot.shell(UIText.SimpleConfigurePushDialog_WindowTitle);
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_AddRefSpecLabel, 1).click();
    // add push spec
    shell = bot.shell(UIText.RefSpecDialog_WindowTitle);
    shell.bot().textWithLabel(UIText.RefSpecDialog_SourceBranchPushLabel).setText("HEAD");
    shell.bot().textWithLabel(UIText.RefSpecDialog_DestinationPushLabel).setText("refs/for/master");
    final Text text = shell.bot().textWithLabel(UIText.RefSpecDialog_DestinationPushLabel).widget;
    shell.display.syncExec(new Runnable() {

        @Override
        public void run() {
            text.setFocus();
            text.notifyListeners(SWT.Modify, new Event());
        }
    });
    shell.bot().button(IDialogConstants.OK_LABEL).click();
    shell = bot.shell(UIText.SimpleConfigurePushDialog_WindowTitle);
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_SaveButton).click();
    refreshAndWait();
    // assert 2 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(2, children.size());
    item.getNode(0).select();
    // we remove the fetch, the URI is copied into push
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("RemoveFetchCommand"));
    refreshAndWait();
    // assert 1 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(1, children.size());
    item.getNode(0).select();
    // now we also remove the push
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("RemovePushCommand"));
    refreshAndWait();
    // assert 0 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile)).getNode("testRemote").expand();
    children = item.getNodes();
    assertEquals(0, children.size());
    item.select();
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("ConfigureFetchCommand"));
    String shellText = UIText.SimpleConfigureFetchDialog_WindowTitle;
    shell = bot.shell(shellText);
    // change uri
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_ChangeUriLabel).click();
    shell = bot.shell(UIText.SelectUriWizard_Title);
    shell.bot().text().setText("file:///" + remoteRepositoryFile.getPath());
    shell.bot().button(IDialogConstants.FINISH_LABEL).click();
    // back to dialog
    shell = bot.shell(shellText);
    // add refSpec
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_AddRefSpecLabel).click();
    shell = bot.shell(UIText.SimpleFetchRefSpecWizard_WizardTitle);
    shell.bot().textWithLabel(UIText.FetchSourcePage_SourceLabel).setText("refs/heads/*");
    shell.bot().button(IDialogConstants.NEXT_LABEL).click();
    shell.bot().textWithLabel(UIText.FetchDestinationPage_DestinationLabel).setText("refs/remotes/testRemote/*");
    shell.bot().button(IDialogConstants.FINISH_LABEL).click();
    // back to dialog
    shell = bot.shell(shellText);
    // save
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_SaveButton).click();
    refreshAndWait();
    // assert 1 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(2, children.size());
    // we remove the fetch again
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(2, children.size());
    item.getNode(0).select();
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("RemoveFetchCommand"));
    refreshAndWait();
    TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile)).getNode("testRemote").select();
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("ConfigurePushCommand"));
    shellText = UIText.SimpleConfigurePushDialog_WindowTitle;
    shell = bot.shell(shellText);
    shell.bot().button(UIText.SimpleConfigurePushDialog_AddPushUriButton).click();
    // back to dialog
    shell = bot.shell(shellText);
    shell = bot.shell(UIText.SelectUriWizard_Title);
    shell.bot().text().setText("file:///" + remoteRepositoryFile.getPath());
    shell.bot().button(IDialogConstants.FINISH_LABEL).click();
    shell = bot.shell(shellText);
    // Add is on two buttons
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_AddRefSpecLabel, 1).click();
    // add push spec
    shell = bot.shell(UIText.RefSpecDialog_WindowTitle);
    shell.bot().textWithLabel(UIText.RefSpecDialog_SourceBranchPushLabel).setText("HEAD");
    shell.bot().textWithLabel(UIText.RefSpecDialog_DestinationPushLabel).setText("refs/for/master");
    final Text text2 = shell.bot().textWithLabel(UIText.RefSpecDialog_DestinationPushLabel).widget;
    shell.display.syncExec(new Runnable() {

        @Override
        public void run() {
            // focus for update of other fields
            text2.setFocus();
            text2.notifyListeners(SWT.Modify, new Event());
        }
    });
    shell.bot().button(IDialogConstants.OK_LABEL).click();
    // back to dialog
    shell = bot.shell(shellText);
    shell.bot().button(UIText.AbstractConfigureRemoteDialog_SaveButton).click();
    refreshAndWait();
    // assert 2 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(1, children.size());
    item.select();
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("RepoViewRemoveRemote.label"));
    shell = bot.shell(UIText.RepositoriesView_ConfirmDeleteRemoteHeader);
    // Cancel
    shell.bot().button(IDialogConstants.CANCEL_LABEL).click();
    refreshAndWait();
    // assert 2 children
    item = TestUtil.expandAndWait(myRepoViewUtil.getRemotesItem(tree, repositoryFile));
    item = TestUtil.expandAndWait(item.getNode("testRemote"));
    children = item.getNodes();
    assertEquals(1, children.size());
    ContextMenuHelper.clickContextMenu(tree, myUtil.getPluginLocalizedValue("RepoViewRemoveRemote.label"));
    // OK
    bot.shell(UIText.RepositoriesView_ConfirmDeleteRemoteHeader).bot().button(IDialogConstants.OK_LABEL).click();
    refreshAndWait();
    assertTrue(myRepoViewUtil.getRemotesItem(tree, repositoryFile).getNodes().isEmpty());
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewRepoDeletionTest.java
============================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewRepoHandlingTest.java
============================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewTagHandlingTest.java
===========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewTest.java
================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewTestBase.java
====================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/repositories/GitRepositoriesViewTestUtils.java
=====================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/AbstractSynchronizeViewTest.java
===================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/MockLogicalModelProvider.java
================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/MockLogicalResourceMapping.java
==================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewGitChangeSetModelTest.java
============================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewPushTest.java
===============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewRemoteAwareChangeSetModelTest.java
====================================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewWorkspaceModelTest.java
=========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/GitCloneSourceProviderExtensionTest.java
========================================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/GitCloneWizardHttpsTest.java
============================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/GitCloneWizardHttpTest.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/GitCloneWizardTest.java
=======================================================================================



Line No: 51 


Line No: 55 


Line No: 57 


Line No: 61 


Line No: 62 


Line No: 64 


Line No: 66 


Line No: 68 


Line No: 70 


Line No: 77 


Line No: 80 


Line No: 84 


Line No: 89 


Line No: 93 


Line No: 97 


Line No: 101 


Line No: 105 


Line No: 109 ------->
Mystry Guest smell found
 [Lines Optional[(line 46,col 21)] - Optional[(line 175,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage propertiesPage = importWizard.openRepoPropertiesPage();
    propertiesPage.setURI("git://www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    propertiesPage.appendToURI("X");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGITX", "git", "", true, "", "", false, false);
    propertiesPage.setURI("git://www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    propertiesPage.setURI("git://user:hi@www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(" User not supported on git protocol.", "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    // UI doesn't change URI even when password is entered in clear text as
    // part of URI. Opinions on this may vary.
    propertiesPage.assertURI("git://user:hi@www.jgit.org/EGIT");
    propertiesPage.setURI("ssh://user@www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "ssh", "", true, "user", "", true, true);
    propertiesPage.setURI("ssh://user@www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "ssh", "", true, "user", "", true, true);
    propertiesPage.setURI("ssh://user:hi@www.jgit.org:33/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "ssh", "33", true, "user", "hi", true, true);
    propertiesPage.setURI("ssh:///EGIT");
    propertiesPage.assertSourceParams(" Host required for ssh protocol.", "", "/EGIT", "ssh", "", true, "", "", true, true);
    propertiesPage.setURI("file:///some/place");
    if (Platform.getOS().equals(Platform.OS_WIN32))
        propertiesPage.assertSourceParams(" " + System.getProperty("user.dir") + "\\.\\some\\place does not exist.", "", "/some/place", "file", "", false, "", "", false, false);
    else
        propertiesPage.assertSourceParams(" /some/place does not exist.", "", "/some/place", "file", "", false, "", "", false, false);
    // Now try changing some fields other than URI and see how the URI field
    // gets changed
    propertiesPage.setURI("ssh://user@www.jgit.org/EGIT");
    // ..change host
    bot.textWithLabel("Host:").setText("example.com");
    propertiesPage.assertURI("ssh://user@example.com/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "ssh", "", true, "user", "", true, true);
    // ..change user
    bot.textWithLabel("User:").setText("gitney");
    propertiesPage.assertURI("ssh://gitney@example.com/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "ssh", "", true, "gitney", "", true, true);
    // ..change password
    bot.textWithLabel("Password:").setText("fsck");
    // Password is not written into the URL here!
    propertiesPage.assertURI("ssh://gitney@example.com/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "ssh", "", true, "gitney", "fsck", true, true);
    // change port number
    bot.textWithLabel("Port:").setText("99");
    propertiesPage.assertURI("ssh://gitney@example.com:99/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "ssh", "99", true, "gitney", "fsck", true, true);
    // change protocol to another with user/password capability
    bot.comboBoxWithLabel("Protocol:").setSelection("ftp");
    propertiesPage.assertURI("ftp://gitney@example.com:99/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "ftp", "99", true, "gitney", "fsck", true, true);
    // change protocol to one without user/password capability
    bot.comboBoxWithLabel("Protocol:").setSelection("git");
    propertiesPage.assertURI("git://example.com:99/EGIT");
    propertiesPage.assertSourceParams(null, "example.com", "/EGIT", "git", "99", true, "", "", false, false);
    // change protocol to one without host capability
    bot.comboBoxWithLabel("Protocol:").setSelection("file");
    propertiesPage.assertURI("file:///EGIT");
    propertiesPage.assertSourceParams(" /EGIT does not exist.", "", "/EGIT", "file", "", false, "", "", false, false);
    // that one should exist.
    if (Platform.getOS().equals(Platform.OS_WIN32))
        propertiesPage.setURI("file:///" + System.getProperty("user.home"));
    else
        propertiesPage.setURI("file://" + System.getProperty("user.home"));
    propertiesPage.assertSourceParams(null, "", System.getProperty("user.home"), "file", "", false, "", "", false, false);
    // Local protocol without file: prefix
    propertiesPage.setURI(System.getProperty("user.home"));
    propertiesPage.assertSourceParams(null, "", System.getProperty("user.home"), "file", "", false, "", "", false, false);
    // a case for forward slashes using the non prefixed local protocol.
    if (Platform.getOS().equals(Platform.OS_WIN32)) {
        propertiesPage.setURI(System.getProperty("user.home"));
        propertiesPage.assertSourceParams(null, "", System.getProperty("user.home"), "file", "", false, "", "", false, false);
    }
    bot.button("Cancel").click();
}



Line No: 183 ------->
Mystry Guest smell found
 [Lines Optional[(line 178,col 54)] - Optional[(line 196,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage propertiesPage = importWizard.openRepoPropertiesPage();
    propertiesPage.setURI("file:///Some/Directory With Spaces/bare.git");
    if (Platform.getOS().equals(Platform.OS_WIN32)) {
        propertiesPage.assertSourceParams(" " + System.getProperty("user.dir") + "\\.\\Some\\Directory With Spaces\\bare.git does not exist.", "", "/Some/Directory With Spaces/bare.git", "file", "", false, "", "", false, false);
    } else {
        propertiesPage.assertSourceParams(" /Some/Directory With Spaces/bare.git does not exist.", "", "/Some/Directory With Spaces/bare.git", "file", "", false, "", "", false, false);
    }
    bot.button("Cancel").click();
}



Line No: 281 


Line No: 282 ------->
Mystry Guest smell found
 [Lines Optional[(line 276,col 62)] - Optional[(line 287,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage repoProperties = importWizard.openRepoPropertiesPage();
    RepoRemoteBranchesPage remoteBranches = repoProperties.nextToRemoteBranches("git://no.example.com/EGIT");
    remoteBranches.assertErrorMessage(NLS.bind(UIText.SourceBranchPage_CompositeTransportErrorMessage, "Exception caught during execution of ls-remote command", "git://no.example.com/EGIT: unknown host"));
    remoteBranches.assertCannotProceed();
    remoteBranches.cancel();
}



Line No: 298 


Line No: 299 ------->
Mystry Guest smell found
 [Lines Optional[(line 293,col 58)] - Optional[(line 304,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage repoProperties = importWizard.openRepoPropertiesPage();
    RepoRemoteBranchesPage remoteBranches = repoProperties.nextToRemoteBranches("git://localhost:80/EGIT");
    remoteBranches.assertErrorMessage(NLS.bind(UIText.SourceBranchPage_CompositeTransportErrorMessage, "Exception caught during execution of ls-remote command", "git://localhost:80/EGIT: Connection refused"));
    remoteBranches.assertCannotProceed();
    remoteBranches.cancel();
}



Line No: 314 


Line No: 315 ------->
Mystry Guest smell found
 [Lines Optional[(line 309,col 63)] - Optional[(line 318,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage repoProperties = importWizard.openRepoPropertiesPage();
    RepoRemoteBranchesPage remoteBranches = repoProperties.nextToRemoteBranches("git://www.example.com/EGIT");
    remoteBranches.assertErrorMessage("git://www.example.com/EGIT: unknown host");
    remoteBranches.assertCannotProceed();
    remoteBranches.cancel();
}



Line No: 327 


Line No: 330 


Line No: 333 ------->
Mystry Guest smell found
 [Lines Optional[(line 321,col 57)] - Optional[(line 342,col 2)] ] 

{
    importWizard.openWizard();
    RepoPropertiesPage propertiesPage = importWizard.openRepoPropertiesPage();
    // remove git clone command
    propertiesPage.setURI("git clone git://www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    // leading and trailing whitespace should be stripped automatically
    propertiesPage.setURI(" git clone git://www.jgit.org/EGIT     ");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    // assert trimming works fine in all other places
    propertiesPage.setURI("   git clone    git://www.jgit.org/EGIT");
    propertiesPage.assertSourceParams(null, "www.jgit.org", "/EGIT", "git", "", true, "", "", false, false);
    bot.button("Cancel").click();
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/GitCloneWizardTestBase.java
===========================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/SampleTestRepository.java
=========================================================================================



Line No: 191 ------->
Mystry Guest smell found
 [Lines Optional[(line 183,col 42)] - Optional[(line 191,col 2)] ] 

{
    d = new Daemon();
    FileResolver<DaemonClient> resolver = new FileResolver<>();
    resolver.exportRepository(REPO_NAME, src.getRepository());
    d.setRepositoryResolver(resolver);
    d.start();
    uri = "git://localhost:" + d.getAddress().getPort() + "/" + REPO_NAME + Constants.DOT_GIT_EXT;
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/TestRepositorySearchPage.java
=============================================================================================



Line No: 42 ------->
Mystry Guest smell found
 [Lines Optional[(line 39,col 50)] - Optional[(line 42,col 2)] ] 

{
    return new GitRepositoryInfo("http://egit.eclipse.org/r/p/egit-training");
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/clone/TestRepositoryServerProvider.java
=================================================================================================



Line No: 33 


Line No: 34 ------->
Mystry Guest smell found
 [Lines Optional[(line 28,col 69)] - Optional[(line 40,col 2)] ] 

{
    List<RepositoryServerInfo> info = new ArrayList<RepositoryServerInfo>();
    try {
        info.add(new RepositoryServerInfo("EGit Gerrit", new URI("http://egit.eclipse.org/r")));
        info.add(new RepositoryServerInfo("Local Gerrit", new URI("http://localhost:8080")));
    } catch (URISyntaxException e) {
        Activator.error(e.getLocalizedMessage(), e);
    }
    return info;
}

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/pull/PullWizardTest.java
==================================================================================

/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/wizards/share/SharingWizardTest.java
======================================================================================
